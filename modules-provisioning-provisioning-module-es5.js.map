{"version":3,"sources":["webpack:///src/app/modules/provisioning/provisioning.module.ts","webpack:///src/app/modules/provisioning/provisioning/provisioning.component.html","webpack:///src/app/modules/provisioning/provisioning/provisioning.component.ts","webpack:///src/app/shared/data/static.data.ts"],"names":["routes","path","component","ProvisioningModule","forChild","declarations","imports","ProvisioningComponent","api","fb","localdata","isStaticData","staticData","firstLeveldata","jobDuties","channels","businessRoles","teams","applications","applicationAttributes","attributeOptions","selectedApplications","selectedRoles","commonAttributesForms","FunctionalGroup","Centers","ChannelsID","ChannelsCD","testForm","group","business_role_id","channel_id","required","job_duty_id","team_id","generalRoles","get","organization","team","channel","jobrole","buildForms","resetData","loadFirstLevelData","getApplications","multipleSelectionBusinessRoles","map","item","id","text","name","format","replace","toLowerCase","options","applicationForm","application","levelOneForm","levelTwoForm","roleField","value","length","selectedRole","filter","x","toString","push","reset","appId","systemId","allowMultiple","removed","app","forEach","translations","invalid","attributes","Date","getTime","getApplicationBySystemId","toggleRemoveAppIfNotMultiple","defaultValues","arrayFormGroup","app_id","center_cd","channel_cd","function_group_id","patchValue","centerCD","channelCD","channelId","functionGroupId","applicationsFormArray","attributeName","attrNameNoSpace","Promise","res","rej","defaultAppConfigs","levelOneData","applicationId","businessRoleId","jobDutyId","teamId","list","toPromise","defaults","attributesWithOptions","attr","getAttributeOptions","category","getListOf","then","entity","limit","offset","subscribe","alert","levelOne","levelTwo","data","create","selectedList","businessRoleObject","selectedBusinessRoles","onSelectionChange","addApplication","save","selector","templateUrl","styleUrls","STATIC_DATA","label"],"mappings":"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","file":"modules-provisioning-provisioning-module-es5.js","sourcesContent":["import { ProvisioningComponent } from './provisioning/provisioning.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProvisioningComponent\n  }\n];\n@NgModule({\n  declarations: [\n    ProvisioningComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ProvisioningModule { }\n","<h2 class=\"section-title\">General Role Maintenance</h2>\r\n<form class=\"levelOne\" [formGroup]=\"levelOneForm\">\r\n    <div>\r\n        <div class=\"form-group\">\r\n            <label>Organization</label>\r\n            <select class=\"form-control form-control-sm\" formControlName=\"job_duty_id\">\r\n                <option></option>\r\n                <option [value]=\"jobDuty.id\" *ngFor=\"let jobDuty of firstLeveldata.jobDuties\">{{jobDuty.name}}</option>\r\n            </select>\r\n        </div>\r\n        <!-- <div class=\"form-group\">\r\n                <label>Application Role</label>\r\n                <select class=\"form-control form-control-sm\" formControlName=\"business_role_id\">\r\n                        <option></option>\r\n                        <option [value]=\"br.id\" *ngFor=\"let br of firstLeveldata.businessRoles\">{{br.name}}</option>\r\n                </select>\r\n            </div> -->\r\n        <div class=\"form-group\">\r\n            <label>Channel</label>\r\n            <select class=\"form-control form-control-sm\" formControlName=\"channel_id\">\r\n                <option></option>\r\n                <option [value]=\"ch.id\" *ngFor=\"let ch of firstLeveldata.channels\">{{ch.name}}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label>Team</label>\r\n            <select class=\"form-control form-control-sm\" formControlName=\"team_id\">\r\n                <option></option>\r\n                <option [value]=\"ch.id\" *ngFor=\"let ch of firstLeveldata.teams\">{{ch.name}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"applicationRole\">\r\n        <div class=\"form-group\">\r\n            <label>Business Job Role</label>\r\n            <!-- <div>\r\n                <select class=\"form-control form-control-sm\" formControlName=\"business_role_id\">\r\n                    <option></option>\r\n                    <ng-container *ngFor=\"let br of firstLeveldata.businessRoles\">\r\n                        <option [value]=\"br.id\" *ngIf=\"!isRoleAlreadySelected(br.id)\">{{br.name}}</option>\r\n                    </ng-container>\r\n                </select>\r\n                <button class=\"btn btn-success btn-sm\" (click)=\"addRole()\">Add</button>\r\n            </div> -->\r\n            <app-multiple-selection (onSelectionChange)=\"onSelectionChange($event)\" [selection]=\"this.multipleSelectionBusinessRoles\"></app-multiple-selection>\r\n        </div>\r\n        <!-- <ul>\r\n            <li *ngFor=\"let role of selectedRoles\">\r\n                {{role.name}}\r\n                <a (click)=\"removeRole(role.id)\">remove</a>\r\n            </li>\r\n        </ul> -->\r\n    </div>\r\n</form>\r\n\r\n<h2 class=\"section-title\">Application Assignment</h2>\r\n<form [formGroup]=\"applicationForm\" class=\"application\">\r\n    <div class=\"form-group\">\r\n        <label>Application</label>\r\n        <select class=\"form-control form-control-sm\" formControlName=\"application\">\r\n            <option></option>\r\n            <ng-container *ngFor=\"let app of applications\">\r\n                <!-- *ngIf=\"!isAppAlreadySelected(app.systemId)\" -->\r\n                <option [value]=\"app.systemId\" *ngIf=\"!app.removed\">{{app.translations | itranslate}}</option>\r\n            </ng-container>\r\n\r\n        </select>\r\n        <button class=\"btn btn-primary btn-sm\" (click)=\"addApplication()\">Add Application</button>\r\n    </div>\r\n</form>\r\n\r\n<div [formGroup]=\"levelTwoForm\" class=\"level-two\">\r\n    <!-- <div formArrayName=\"applications\">\r\n        <div class=\"card\" *ngFor=\"let app of selectedApplications; let i=index\" [formGroupName]=\"i\">\r\n            <input type=\"hidden\" formControlName=\"app_id\"> \r\n            \r\n            <div class=\"card-header\">\r\n                {{app.name}}\r\n                <button type=\"button\" class=\"btn btn-link\" (click)=\"removeApplication(app.id, i)\">remove</button>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                    <div class=\"form-group\" *ngFor=\"let attr of app.attributes\">\r\n                        <label> {{attr.categoryValue}}</label> \r\n                        <select class=\"form-control form-control-sm\" [formControlName]=\"getAttributeFormName(attr.categoryValue)\">\r\n                            <option></option>\r\n                            <option [value]=\"option.categoryId\" *ngFor=\"let option of attr.options\">\r\n                                {{option.categoryValue}}\r\n                            </option>\r\n                        </select>                        \r\n                    </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div> -->\r\n    <div>\r\n        <div class=\"card\" *ngFor=\"let app of selectedApplications; let i=index\">\r\n            <div class=\"card-header\">\r\n                {{app.application.translations | itranslate}}\r\n\r\n                <button type=\"button\" class=\"btn btn-link\" (click)=\"removeApplication(app.id)\">remove</button>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"form-group\" *ngFor=\"let attr of app.attributes\">\r\n                    <label> {{attr.translations | itranslate}}</label>\r\n\r\n                    <select class=\"form-control form-control-sm\"\r\n                        *ngIf=\"getOptions(attr.attbId).length > 0;else inputField\">\r\n                        <option></option>\r\n                        <option [selected]=\"option.default\" [value]=\"option.value\"\r\n                            *ngFor=\"let option of getOptions(attr.attbId)\">\r\n                            {{option.translations | itranslate}}\r\n                        </option>\r\n                    </select>\r\n                    <ng-template #inputField>\r\n                        <input type=\"text\" class=\"form-control form-control-sm\">\r\n                    </ng-template>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"submit\">\r\n    <button class=\"btn btn-primary\" (click)=\"save()\">Save</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ApiService } from '../../../shared/services/api.service';\r\nimport { STATIC_DATA } from '../../../shared/data/static.data';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LocalDataService } from 'src/app/shared/services/local-data.service';\r\nimport { IApplication } from '../../../shared/interfaces/iapplication';\r\nimport { IMultipleSelectionTag } from '../../../shared/interfaces/i-multiple-selection-tag';\r\n\r\ninterface ISelectionApplications extends IApplication {\r\n  removed: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-provisioning',\r\n  templateUrl: './provisioning.component.html',\r\n  styleUrls: ['./provisioning.component.scss']\r\n})\r\nexport class ProvisioningComponent implements OnInit {\r\n\r\n  private isStaticData = environment.staticData;\r\n\r\n  firstLeveldata = {\r\n    jobDuties: STATIC_DATA.jobDuties,\r\n    channels: STATIC_DATA.channels,\r\n    businessRoles: STATIC_DATA.businessRoles,\r\n    teams: STATIC_DATA.teams,\r\n  };\r\n  applications: ISelectionApplications[] = [];\r\n  applicationAttributes = [];\r\n  attributeOptions = [];\r\n\r\n  selectedApplications = [];\r\n  selectedRoles = [];\r\n\r\n  applicationForm: FormGroup;\r\n  levelOneForm: FormGroup;\r\n  levelTwoForm: FormGroup;\r\n  testForm: FormGroup;\r\n  generalRoles: any;\r\n\r\n  multipleSelectionBusinessRoles: IMultipleSelectionTag[];\r\n  selectedBusinessRoles: IMultipleSelectionTag[];\r\n\r\n  commonAttributesForms = {\r\n    FunctionalGroup: 'function_group_id',\r\n    Centers: 'center_cd',\r\n    ChannelsID: 'channel_id',\r\n    ChannelsCD: 'channel_cd'\r\n  };\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private fb: FormBuilder,\r\n    private localdata: LocalDataService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.testForm = this.fb.group({\r\n      business_role_id: ['a'],\r\n      channel_id: ['', Validators.required],\r\n      job_duty_id: ['', Validators.required],\r\n      team_id: ['', Validators.required]\r\n    });\r\n\r\n    this.generalRoles = this.localdata.get('general-roles') || {\r\n      organization : [],\r\n      team : [],\r\n      channel : [],\r\n      jobrole : [],\r\n    };\r\n    this.firstLeveldata = {\r\n      jobDuties: this.generalRoles.organization,\r\n      channels: this.generalRoles.channel,\r\n      businessRoles: this.generalRoles.jobrole,\r\n      teams: this.generalRoles.team,\r\n    };\r\n\r\n    this.buildForms();\r\n\r\n    if (this.isStaticData) {\r\n      this.applications = this.localdata.get('applications');\r\n      this.applicationAttributes = this.localdata.get('applicationAttributes') || [];\r\n      this.attributeOptions = this.localdata.get('attributeOptions') || [];\r\n    }\r\n\r\n    if (!this.isStaticData) {\r\n      this.resetData();\r\n      this.loadFirstLevelData();\r\n      this.getApplications();\r\n    }\r\n\r\n    this.multipleSelectionBusinessRoles = this.firstLeveldata.businessRoles.map(item => {\r\n      return {\r\n        id: item.id,\r\n        text: item.name\r\n      };\r\n    });\r\n  }\r\n\r\n  getOptions(id): any {\r\n    const format = id.replace(/\\ /g, '_').toLowerCase();\r\n    const options = this.attributeOptions['attr-opts-' + format];\r\n    return options || [];\r\n  }\r\n\r\n  private buildForms(): void {\r\n    this.applicationForm = this.fb.group({\r\n      application: ['', Validators.required]\r\n    });\r\n    this.levelOneForm = this.fb.group({\r\n      business_role_id: [''],\r\n      channel_id: ['', Validators.required],\r\n      job_duty_id: ['', Validators.required],\r\n      team_id: ['', Validators.required]\r\n    });\r\n\r\n    this.levelTwoForm = new FormGroup({\r\n      applications: new FormArray([])\r\n    });\r\n  }\r\n\r\n  get applicationsFormArray(): FormArray {\r\n    return this.levelTwoForm.get('applications') as FormArray;\r\n  }\r\n\r\n  addRole(): void {\r\n    const roleField = this.levelOneForm.get('business_role_id');\r\n    if (roleField.value.length < 1) {\r\n      return;\r\n    }\r\n    const selectedRole = this.firstLeveldata.businessRoles.filter( x => x.id.toString() === roleField.value);\r\n    this.selectedRoles.push(selectedRole[0]);\r\n    roleField.reset();\r\n  }\r\n\r\n  removeRole(id): void{\r\n    this.selectedRoles = this.selectedRoles.filter(x => x.id !== id);\r\n  }\r\n\r\n  toggleRemoveAppIfNotMultiple(appId: string) {\r\n    this.applications = this.applications.map(item => {\r\n      if (item.systemId === appId && !item.allowMultiple) {\r\n        item.removed = !item.removed;\r\n      }\r\n      return item;\r\n    });\r\n  }\r\n\r\n  getAppTranslation(systemId) {\r\n    let app;\r\n    this.applications.forEach(item => {\r\n      if (systemId === item.systemId) {\r\n        app = item;\r\n      }\r\n    });\r\n    return app.translations;\r\n  }\r\n\r\n  private getApplicationBySystemId(systemId) {\r\n    return this.applications.filter(item => item.systemId === systemId)[0];\r\n  }\r\n\r\n  async addApplication(): Promise<any> {\r\n    if (this.applicationForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const appId = this.applicationForm.value.application;\r\n    const format = appId.replace(/\\ /g, '_').toLowerCase();\r\n    const attributes = this.applicationAttributes['app-attr-' + format];\r\n\r\n    this.selectedApplications.push({\r\n      id: new Date().getTime(),\r\n      appId,\r\n      attributes,\r\n      application: this.getApplicationBySystemId(appId)\r\n    });\r\n\r\n    this.toggleRemoveAppIfNotMultiple(appId);\r\n    this.applicationForm.reset();\r\n\r\n    // let app = this.applications.filter( x =>  x.id.toString() === appId)[0] as any;\r\n    // const attributes = await this.getApplicationAttributes(appId);\r\n    // const attributeDefaultValues: any = await this.getApplicationAttributeDefaults(appId);\r\n    // this.buildApplicationsFormArray(appId, attributeDefaultValues.defaultAppConfigs[0]);\r\n\r\n    // app = {\r\n    //   ...app,\r\n    //   attributes\r\n    // };\r\n    // this.selectedApplications.push(app);\r\n    // this.applicationForm.reset();\r\n    return;\r\n  }\r\n\r\n  private buildApplicationsFormArray(appId, defaultValues): void{\r\n\r\n    const arrayFormGroup = this.fb.group({\r\n      app_id: [appId, Validators.required],\r\n      center_cd: ['', Validators.required],\r\n      channel_cd: ['', Validators.required],\r\n      channel_id: ['', Validators.required],\r\n      function_group_id: ['', Validators.required],\r\n    });\r\n\r\n    if (defaultValues) {\r\n      arrayFormGroup.patchValue({\r\n        center_cd: defaultValues.centerCD,\r\n        channel_cd: defaultValues.channelCD,\r\n        channel_id: defaultValues.channelId,\r\n        function_group_id: defaultValues.functionGroupId,\r\n      });\r\n    }\r\n    this.applicationsFormArray.push(arrayFormGroup);\r\n  }\r\n\r\n  getAttributeFormName(attributeName): string{\r\n    const attrNameNoSpace = attributeName.replace(/\\ /g, '');\r\n    return this.commonAttributesForms[attrNameNoSpace];\r\n  }\r\n\r\n  async getApplicationAttributeDefaults(appId): Promise<any> {\r\n    const levelOneForm = this.levelOneForm.value;\r\n    if (\r\n      !levelOneForm.business_role_id &&\r\n      !levelOneForm.channel_id &&\r\n      !levelOneForm.job_duty_id &&\r\n      !levelOneForm.team_id\r\n    ) {\r\n      return new Promise((res, rej) => res({defaultAppConfigs: []}));\r\n    }\r\n\r\n    const levelOneData = {\r\n      applicationId: appId,\r\n      businessRoleId: levelOneForm.business_role_id,\r\n      channelId: levelOneForm.channel_id,\r\n      jobDutyId: levelOneForm.job_duty_id,\r\n      teamId: levelOneForm.team_id\r\n    };\r\n    const defaults = await this.api.list('default-app-config/getDefaultAttributes', levelOneData).toPromise();\r\n    return defaults;\r\n  }\r\n\r\n  async getApplicationAttributes(appId): Promise<any[]> {\r\n    const attributes = await this.api.list('attribute/getAllAppAttribute', { appId }).toPromise();\r\n\r\n    const attributesWithOptions = [];\r\n    for await (const attr of attributes) {\r\n      const options = await this.getAttributeOptions(appId, attr.category);\r\n      attributesWithOptions.push({\r\n        ...attr,\r\n        options\r\n      });\r\n    }\r\n    return attributesWithOptions;\r\n  }\r\n\r\n  async getAttributeOptions(appId, category ): Promise<any> {\r\n    const options = await this.api.list('attribute/findValuesByCategory', { appId, category}).toPromise();\r\n    return options;\r\n  }\r\n\r\n  isRoleAlreadySelected(id): boolean {\r\n    return this.selectedRoles.filter( x => x.id === id).length > 0;\r\n  }\r\n\r\n  isAppAlreadySelected(id): boolean{\r\n    return this.selectedApplications.filter( x => x.id === id).length > 0;\r\n  }\r\n\r\n  // removeApplication(id, index): void {\r\n  //   this.selectedApplications = this.selectedApplications.filter( x =>  x.id !== id);\r\n  //   this.applicationsFormArray.removeAt(index);\r\n\r\n  //   console.log(this.levelTwoForm.value);\r\n  // }\r\n  removeApplication(id): void {\r\n    this.selectedApplications = this.selectedApplications.filter((x) =>  {\r\n      if (x.id !== id) {\r\n        return true;\r\n      }\r\n      if (!x.allowMultiple) {\r\n        this.toggleRemoveAppIfNotMultiple(x.appId)\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  private resetData(): void{\r\n    this.firstLeveldata = {\r\n      jobDuties: [],\r\n      channels: [],\r\n      businessRoles: [],\r\n      teams: []\r\n    };\r\n\r\n    this.applications = [];\r\n  }\r\n\r\n  private getApplications(): void {\r\n    this.getListOf('application').then( x => {\r\n      this.applications = x;\r\n    });\r\n  }\r\n\r\n  private loadFirstLevelData(): void{\r\n    this.getListOf('job-duty').then( x => {\r\n      this.firstLeveldata.jobDuties = x;\r\n    });\r\n    this.getListOf('business-role').then( x => {\r\n      this.firstLeveldata.businessRoles = x;\r\n    });\r\n    this.getListOf('channel').then( x => {\r\n      this.firstLeveldata.channels = x;\r\n    });\r\n    this.getListOf('team').then( x => {\r\n      this.firstLeveldata.teams = x;\r\n    });\r\n  }\r\n\r\n  private getListOf(entity): Promise<any>{\r\n    return new Promise( (res, rej) => {\r\n      this.api.list(entity, {limit: 999, offset: 0}).subscribe( x => {\r\n        res(x);\r\n      });\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    if (this.levelOneForm.invalid || this.levelTwoForm.invalid) {\r\n      alert('All Fields are required');\r\n      return;\r\n    }\r\n\r\n    const levelOne  = this.levelOneForm.value;\r\n    const levelTwo  = this.levelTwoForm.value;\r\n    const data = {\r\n      ...levelOne,\r\n      applications: [\r\n        ...levelTwo.applications\r\n      ]\r\n    };\r\n\r\n    this.api.create('preset', data).subscribe( x => {\r\n      this.levelOneForm.reset();\r\n      this.levelTwoForm.reset();\r\n      alert('Success');\r\n    });\r\n  }\r\n\r\n  // getAttributeOptions(attrID): any {\r\n  //   return STATIC_DATA.attributes.filter ( x => x.id === attrID)[0];\r\n  // }\r\n\r\n  onSelectionChange(selectedList: IMultipleSelectionTag[]) {\r\n    const businessRoleObject = {};\r\n    this.selectedRoles = [];\r\n    this.selectedBusinessRoles = selectedList;\r\n    this.firstLeveldata.businessRoles.forEach(item => {\r\n      businessRoleObject[item.id] = item;\r\n    });\r\n    selectedList.forEach(item => {\r\n      this.selectedRoles.push(businessRoleObject[item.id]);\r\n    });\r\n  }\r\n}\r\n","export const STATIC_DATA = {\r\n    applications: [\r\n        {\r\n            id: 1,\r\n            name: 'SVC',\r\n            attributes: [\r\n                {\r\n                    id: 1,\r\n                    name: 'Function Group'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: 'Channel ID'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: 'Channel CD'\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name: 'Center CD'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'BOM',\r\n            attributes: [\r\n                {\r\n                    id: 1,\r\n                    name: 'Function Group'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: 'Channel ID'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: 'Channel CD'\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name: 'Center CD'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Salesforce',\r\n            attributes: [\r\n                {\r\n                    id: 1,\r\n                    name: 'Function Group'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: 'Channel ID'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: 'Channel CD'\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name: 'Center CD'\r\n                },\r\n                {\r\n                    id: 5,\r\n                    name: 'Profile'\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    jobDuties: [\r\n        {\r\n            id: 1,\r\n            name: 'Fullfilment / CFM'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Smart Charge / SCS'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Outbound Sales (call center) / OBS'\r\n        },\r\n    ],\r\n    businessRoles: [\r\n        {\r\n            id: 1,\r\n            name: 'Supervisor'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Frontline'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Sales Manager'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Support'\r\n        }\r\n    ],\r\n    channels: [\r\n        {\r\n            id: 5,\r\n            name: 'CS_SC_14'\r\n        },\r\n        {\r\n            id: 1,\r\n            name: 'VCC'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'OBS'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'RET'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'CSS'\r\n        }\r\n    ],\r\n    teams: [\r\n        {\r\n            id: 1,\r\n            name: 'CS_SC_14'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'VCC'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'OBS'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'RET'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'CSS'\r\n        }\r\n    ],\r\n\r\n    attributes: [\r\n        {\r\n            id: 1,\r\n            name: 'Function Group',\r\n            options: [\r\n                {\r\n                    label: 'RS-CSL-FRONTLINE',\r\n                    value: '1'\r\n                },\r\n                {\r\n                    label: 'LTS-RET-SM',\r\n                    value: '1'\r\n                },\r\n                {\r\n                    label: 'CFM3-F&S-SMART-LIVING ONLY SUPPORT',\r\n                    value: '1'\r\n                },\r\n                {\r\n                    label: 'PCD-RET-SM',\r\n                    value: '1'\r\n                },\r\n                {\r\n                    label: 'QOM-QSI',\r\n                    value: '1'\r\n                },\r\n                {\r\n                    label: 'RS-CSL-FRONTLINE',\r\n                    value: '1'\r\n                },\r\n                {\r\n                    label: 'CSS-IMSTS - AGENT',\r\n                    value: '1'\r\n                },\r\n                {\r\n                    label: 'CSS-IMSTS - MANAGER',\r\n                    value: '1'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Channel ID',\r\n            options: [\r\n                {\r\n                    label: 1,\r\n                    value: 1\r\n                },\r\n                {\r\n                    label: 2,\r\n                    value: 2\r\n                },\r\n                {\r\n                    label: 3,\r\n                    value: 3\r\n                },\r\n                {\r\n                    label: 4,\r\n                    value: 4\r\n                },\r\n                {\r\n                    label: 5,\r\n                    value: 5\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Channel CD',\r\n            options: [\r\n                {\r\n                    label: 'QOM',\r\n                    value: 'QOM'\r\n                },\r\n                {\r\n                    label: 'CSS',\r\n                    value: 'CSS'\r\n                },\r\n                {\r\n                    label: 'IBS',\r\n                    value: 'IBS'\r\n                },\r\n                {\r\n                    label: 'VCC',\r\n                    value: 'VCC'\r\n                },\r\n                {\r\n                    label: 'CFM1',\r\n                    value: 'CFM1'\r\n                },\r\n                {\r\n                    label: 'CPA(LTS)',\r\n                    value: 'CPA(LTS)'\r\n                },\r\n                {\r\n                    label: 'DS6',\r\n                    value: 'DS6'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Center CD',\r\n            options: [\r\n                {\r\n                    label: 'CS SERVICE CENTER',\r\n                    value: 'CS SERVICE CENTER',\r\n                },\r\n                {\r\n                    label: 'TTW/33',\r\n                    value: 'TTW/33'\r\n                },\r\n                {\r\n                    label: 'SHOP TEAM 2',\r\n                    value: 'SHOP TEAM 2'\r\n                },\r\n                {\r\n                    label: 'QOM',\r\n                    value: 'QOM'\r\n                },\r\n                {\r\n                    label: 'RETENTION TEAM',\r\n                    value: 'RETENTION TEAM'\r\n                },\r\n                {\r\n                    label: 'F&S',\r\n                    value: 'F&S'\r\n                },\r\n                {\r\n                    label: 'DEL RETENTION',\r\n                    value: 'DEL RETENTION'\r\n                },\r\n                {\r\n                    label: 'SHOP TEAM 7',\r\n                    value: 'SHOP TEAM 7'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Profile',\r\n            options: [\r\n                {\r\n                    label: 'System Administration',\r\n                    value: 'System Administration'\r\n                },\r\n                {\r\n                    label: 'Sales Manager',\r\n                    value: 'Sales Manager'\r\n                },\r\n                {\r\n                    label: 'Product Encoder',\r\n                    value: 'Product Encoder'\r\n                },\r\n                {\r\n                    label: 'Marketing',\r\n                    value: 'Marketing'\r\n                },\r\n                {\r\n                    label: 'Developer',\r\n                    value: 'Developer'\r\n                },\r\n            ]\r\n        }\r\n    ],\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}