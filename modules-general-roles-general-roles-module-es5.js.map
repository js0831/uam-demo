{"version":3,"sources":["webpack:///src/app/modules/general-roles/create-general-roles/create-general-roles.component.ts","webpack:///src/app/modules/general-roles/create-general-roles/create-general-roles.component.html","webpack:///src/app/modules/general-roles/edit-general-roles/edit-general-roles.component.html","webpack:///src/app/modules/general-roles/edit-general-roles/edit-general-roles.component.ts","webpack:///src/app/modules/general-roles/general-role-list/general-role-list.component.ts","webpack:///src/app/modules/general-roles/general-role-list/general-role-list.component.html","webpack:///src/app/modules/general-roles/general-roles.module.ts","webpack:///src/app/modules/general-roles/general-roles/general-roles.component.ts","webpack:///src/app/modules/general-roles/general-roles/general-roles.component.html"],"names":["CreateGeneralRolesComponent","fb","firstLeveldata","jobDuties","channels","businessRoles","teams","buildForms","loadFirstLevelData","levelOneForm","group","business_role_id","channel_id","required","job_duty_id","team_id","from_date","to_date","data","JSON","parse","localStorage","getItem","generalRoles","console","log","organization","channel","jobrole","team","invalid","alert","saveGeneralRoleToLocalStorage","value","levelOne","push","filter","item","id","businessJobRole","Date","getTime","setItem","stringify","reset","save","selector","templateUrl","styleUrls","EditGeneralRolesComponent","api","localdata","activatedRoute","isStaticData","staticData","applications","applicationAttributes","attributeOptions","selectedApplications","selectedRoles","commonAttributesForms","FunctionalGroup","Centers","ChannelsID","ChannelsCD","testForm","get","forEach","snapshot","params","generalRoleId","generalRole","resetData","getApplications","multipleSelectionBusinessRoles","map","text","name","format","replace","toLowerCase","options","applicationForm","application","levelTwoForm","roleField","length","selectedRole","x","toString","appId","systemId","allowMultiple","removed","app","translations","attributes","getApplicationBySystemId","toggleRemoveAppIfNotMultiple","defaultValues","arrayFormGroup","app_id","center_cd","channel_cd","function_group_id","patchValue","centerCD","channelCD","channelId","functionGroupId","applicationsFormArray","attributeName","attrNameNoSpace","Promise","res","rej","defaultAppConfigs","levelOneData","applicationId","businessRoleId","jobDutyId","teamId","list","toPromise","defaults","attributesWithOptions","attr","getAttributeOptions","category","getListOf","then","entity","limit","offset","subscribe","levelTwo","selectedList","businessRoleObject","selectedBusinessRoles","addApplication","GeneralRoleListComponent","confirm","routes","path","component","GeneralRolesModule","forChild","declarations","imports","GeneralRolesComponent","localData","model","currentData","what","saveLocalData","index","sure","el","i"],"mappings":"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","file":"modules-general-roles-general-roles-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../../../shared/services/api.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-create-general-roles',\r\n  templateUrl: './create-general-roles.component.html',\r\n  styleUrls: ['./create-general-roles.component.scss']\r\n})\r\nexport class CreateGeneralRolesComponent implements OnInit {\r\n\r\n  firstLeveldata = {\r\n    jobDuties: [],\r\n    channels: [],\r\n    businessRoles: [],\r\n    teams: [],\r\n  };\r\n\r\n  levelOneForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.buildForms();\r\n    this.loadFirstLevelData();\r\n  }\r\n\r\n  private buildForms(): void {\r\n    this.levelOneForm = this.fb.group({\r\n      business_role_id: [''],\r\n      channel_id: ['', Validators.required],\r\n      job_duty_id: ['', Validators.required],\r\n      team_id: ['', Validators.required],\r\n      from_date: [],\r\n      to_date: []\r\n    });\r\n  }\r\n\r\n  private loadFirstLevelData(): void{\r\n    const data = JSON.parse(localStorage.getItem('localData'));\r\n    if (data['general-roles']) {\r\n      const generalRoles = data['general-roles'];\r\n      console.log(generalRoles);\r\n      this.firstLeveldata = {\r\n        jobDuties: generalRoles.organization || [],\r\n        channels: generalRoles.channel || [],\r\n        businessRoles: generalRoles.jobrole || [],\r\n        teams: generalRoles.team || [],\r\n      };\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    if (this.levelOneForm.invalid) {\r\n      alert('All Fields are required');\r\n      return;\r\n    }\r\n    this.saveGeneralRoleToLocalStorage(this.levelOneForm.value);\r\n  }\r\n\r\n  private saveGeneralRoleToLocalStorage(levelOne) {\r\n    const generalRoles = JSON.parse(localStorage.getItem('general-roles')) || [];\r\n    generalRoles.push({\r\n      organization: this.firstLeveldata.jobDuties.filter(item => item.id == levelOne.job_duty_id)[0],\r\n      channel: this.firstLeveldata.channels.filter(item => item.id == levelOne.channel_id)[0],\r\n      team: this.firstLeveldata.teams.filter(item => item.id == levelOne.team_id)[0],\r\n      businessJobRole: this.firstLeveldata.businessRoles.filter(item => item.id == levelOne.business_role_id)[0],\r\n      id: new Date().getTime(),\r\n      from_date: levelOne.from_date,\r\n      to_date: levelOne.to_date\r\n    });\r\n    localStorage.setItem('general-roles', JSON.stringify(generalRoles));\r\n    this.levelOneForm.reset();\r\n  }\r\n}\r\n\r\n","<h2 class=\"section-title\">General Role Maintenance</h2>\r\n<form class=\"levelOne\" [formGroup]=\"levelOneForm\">\r\n    <div>\r\n        <div class=\"form-group\">\r\n            <label>Organization</label>\r\n            <select class=\"form-control form-control-sm\" formControlName=\"job_duty_id\">\r\n                <option></option>\r\n                <option [value]=\"jobDuty.id\" *ngFor=\"let jobDuty of firstLeveldata.jobDuties\">{{jobDuty.name}}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label>Channel</label>\r\n            <select class=\"form-control form-control-sm\" formControlName=\"channel_id\">\r\n                <option></option>\r\n                <option [value]=\"ch.id\" *ngFor=\"let ch of firstLeveldata.channels\">{{ch.name}}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label>Team</label>\r\n            <select class=\"form-control form-control-sm\" formControlName=\"team_id\">\r\n                <option></option>\r\n                <option [value]=\"ch.id\" *ngFor=\"let ch of firstLeveldata.teams\">{{ch.name}}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                    <label>From Date</label>\r\n                    <input formControlName=\"from_date\" class=\"form-control form-control-sm\" type=\"date\" />\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <label>To Date</label>\r\n                    <input formControlName=\"to_date\" class=\"form-control form-control-sm\" type=\"date\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"applicationRole\">\r\n        <div class=\"form-group\">\r\n            <label>Business Job Role</label>\r\n            <select class=\"form-control form-control-sm\" formControlName=\"business_role_id\">\r\n                <option></option>\r\n                <option [value]=\"br.id\" *ngFor=\"let br of firstLeveldata.businessRoles\">{{br.name}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<div class=\"submit\">\r\n    <button class=\"btn btn-primary\" (click)=\"save()\">Save</button>\r\n</div>","<h2 class=\"section-title\">General Role Maintenance</h2>\r\n<form class=\"levelOne\" [formGroup]=\"levelOneForm\">\r\n    <div>\r\n        <div class=\"form-group\">\r\n            <label>Organization</label>\r\n            <input readonly class=\"form-control form-control-sm\" formControlName=\"job_duty_id\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label>Channel</label>\r\n            <input readonly class=\"form-control form-control-sm\" formControlName=\"channel_id\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label>Team</label>\r\n            <input readonly class=\"form-control form-control-sm\" formControlName=\"team_id\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                    <label>From Date</label>\r\n                    <input readonly formControlName=\"from_date\" class=\"form-control form-control-sm\" type=\"date\" />\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <label>To Date</label>\r\n                    <input readonly formControlName=\"to_date\" class=\"form-control form-control-sm\" type=\"date\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"applicationRole\">\r\n        <div class=\"form-group\">\r\n            <label>Business Job Role</label>\r\n            <input readonly class=\"form-control form-control-sm\" formControlName=\"business_role_id\">\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<h2 class=\"section-title\">Application Assignment</h2>\r\n<form [formGroup]=\"applicationForm\" class=\"application\">\r\n    <div class=\"form-group\">\r\n        <label>Application</label>\r\n        <select class=\"form-control form-control-sm\" formControlName=\"application\">\r\n            <option></option>\r\n            <ng-container *ngFor=\"let app of applications\">\r\n                <option [value]=\"app.systemId\" *ngIf=\"!app.removed\">{{app.translations | itranslate}}</option>\r\n            </ng-container>\r\n\r\n        </select>\r\n        <button class=\"btn btn-primary btn-sm\" (click)=\"addApplication()\">Add Application</button>\r\n    </div>\r\n</form>\r\n\r\n<div [formGroup]=\"levelTwoForm\" class=\"level-two\">\r\n    <div>\r\n        <div class=\"card\" *ngFor=\"let app of selectedApplications; let i=index\">\r\n            <div class=\"card-header\">\r\n                {{app.application.translations | itranslate}}\r\n\r\n                <button type=\"button\" class=\"btn btn-link\" (click)=\"removeApplication(app.id)\">remove</button>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"form-group\" *ngFor=\"let attr of app.attributes\">\r\n                    <label> {{attr.translations | itranslate}}</label>\r\n\r\n                    <select class=\"form-control form-control-sm\"\r\n                        *ngIf=\"getOptions(attr.attbId).length > 0;else inputField\">\r\n                        <option></option>\r\n                        <option [selected]=\"option.default\" [value]=\"option.value\"\r\n                            *ngFor=\"let option of getOptions(attr.attbId)\">\r\n                            {{option.translations | itranslate}}\r\n                        </option>\r\n                    </select>\r\n                    <ng-template #inputField>\r\n                        <input type=\"text\" class=\"form-control form-control-sm\">\r\n                    </ng-template>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"table-list mt-2\">\r\n\r\n    <div class=\"table-list__buttons\">\r\n        <label>Attributes</label>\r\n        <button type=\"button\" class=\"btn btn-sm btn-success\">Add New Attribute</button>\r\n    </div>\r\n   \r\n    <table class=\"table table-sm draggable\">\r\n        <thead>\r\n            <tr> \r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">Title</th>\r\n                <th scope=\"col\">Type</th>                \r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<div class=\"submit\">\r\n    <button class=\"btn btn-primary\" (click)=\"save()\">Save</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ApiService } from '../../../shared/services/api.service';\r\nimport { STATIC_DATA } from '../../../shared/data/static.data';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LocalDataService } from 'src/app/shared/services/local-data.service';\r\nimport { IApplication } from '../../../shared/interfaces/iapplication';\r\nimport { IMultipleSelectionTag } from '../../../shared/interfaces/i-multiple-selection-tag';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\ninterface ISelectionApplications extends IApplication {\r\n  removed: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-general-roles',\r\n  templateUrl: './edit-general-roles.component.html',\r\n  styleUrls: ['./edit-general-roles.component.scss']\r\n})\r\nexport class EditGeneralRolesComponent implements OnInit {\r\n\r\n  private isStaticData = environment.staticData;\r\n\r\n  firstLeveldata = {\r\n    jobDuties: STATIC_DATA.jobDuties,\r\n    channels: STATIC_DATA.channels,\r\n    businessRoles: STATIC_DATA.businessRoles,\r\n    teams: STATIC_DATA.teams,\r\n  };\r\n  applications: ISelectionApplications[] = [];\r\n  applicationAttributes = [];\r\n  attributeOptions = [];\r\n\r\n  selectedApplications = [];\r\n  selectedRoles = [];\r\n\r\n  applicationForm: FormGroup;\r\n  levelOneForm: FormGroup;\r\n  levelTwoForm: FormGroup;\r\n  testForm: FormGroup;\r\n  generalRoles: any;\r\n  generalRole;\r\n\r\n  multipleSelectionBusinessRoles: IMultipleSelectionTag[];\r\n  selectedBusinessRoles: IMultipleSelectionTag[];\r\n\r\n  commonAttributesForms = {\r\n    FunctionalGroup: 'function_group_id',\r\n    Centers: 'center_cd',\r\n    ChannelsID: 'channel_id',\r\n    ChannelsCD: 'channel_cd'\r\n  };\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private localdata: LocalDataService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.testForm = this.fb.group({\r\n      business_role_id: ['a'],\r\n      channel_id: ['', Validators.required],\r\n      job_duty_id: ['', Validators.required],\r\n      team_id: ['', Validators.required]\r\n    });\r\n\r\n    this.generalRoles = this.localdata.get('general-roles') || {\r\n      organization : [],\r\n      team : [],\r\n      channel : [],\r\n      jobrole : [],\r\n    };\r\n    this.firstLeveldata = {\r\n      jobDuties: this.generalRoles.organization,\r\n      channels: this.generalRoles.channel,\r\n      businessRoles: this.generalRoles.jobrole,\r\n      teams: this.generalRoles.team,\r\n    };\r\n\r\n    JSON.parse(localStorage.getItem('general-roles')).forEach(item => {\r\n      if (item.id == this.activatedRoute.snapshot.params.generalRoleId) {\r\n        this.generalRole = item;\r\n      }\r\n    });\r\n\r\n    console.log(this.generalRole);\r\n\r\n    this.buildForms();\r\n\r\n    if (this.isStaticData) {\r\n      this.applications = this.localdata.get('applications');\r\n      this.applicationAttributes = this.localdata.get('applicationAttributes') || [];\r\n      this.attributeOptions = this.localdata.get('attributeOptions') || [];\r\n    }\r\n\r\n    if (!this.isStaticData) {\r\n      this.resetData();\r\n      this.loadFirstLevelData();\r\n      this.getApplications();\r\n    }\r\n\r\n    this.multipleSelectionBusinessRoles = this.firstLeveldata.businessRoles.map(item => {\r\n      return {\r\n        id: item.id,\r\n        text: item.name\r\n      };\r\n    });\r\n  }\r\n\r\n  getOptions(id): any {\r\n    const format = id.replace(/\\ /g, '_').toLowerCase();\r\n    const options = this.attributeOptions['attr-opts-' + format];\r\n    return options || [];\r\n  }\r\n\r\n  private buildForms(): void {\r\n    this.applicationForm = this.fb.group({\r\n      application: ['', Validators.required]\r\n    });\r\n    this.levelOneForm = this.fb.group({\r\n      business_role_id: this.generalRole.businessJobRole.name,\r\n      channel_id: this.generalRole.channel.name,\r\n      job_duty_id: this.generalRole.organization.name,\r\n      team_id: this.generalRole.team.name,\r\n      from_date: this.generalRole.from_date,\r\n      to_date: this.generalRole.to_date\r\n    });\r\n\r\n    this.levelTwoForm = new FormGroup({\r\n      applications: new FormArray([])\r\n    });\r\n  }\r\n\r\n  get applicationsFormArray(): FormArray {\r\n    return this.levelTwoForm.get('applications') as FormArray;\r\n  }\r\n\r\n  addRole(): void {\r\n    const roleField = this.levelOneForm.get('business_role_id');\r\n    if (roleField.value.length < 1) {\r\n      return;\r\n    }\r\n    const selectedRole = this.firstLeveldata.businessRoles.filter( x => x.id.toString() === roleField.value);\r\n    this.selectedRoles.push(selectedRole[0]);\r\n    roleField.reset();\r\n  }\r\n\r\n  removeRole(id): void{\r\n    this.selectedRoles = this.selectedRoles.filter(x => x.id !== id);\r\n  }\r\n\r\n  toggleRemoveAppIfNotMultiple(appId: string) {\r\n    this.applications = this.applications.map(item => {\r\n      if (item.systemId === appId && !item.allowMultiple) {\r\n        item.removed = !item.removed;\r\n      }\r\n      return item;\r\n    });\r\n  }\r\n\r\n  getAppTranslation(systemId) {\r\n    let app;\r\n    this.applications.forEach(item => {\r\n      if (systemId === item.systemId) {\r\n        app = item;\r\n      }\r\n    });\r\n    return app.translations;\r\n  }\r\n\r\n  private getApplicationBySystemId(systemId) {\r\n    return this.applications.filter(item => item.systemId === systemId)[0];\r\n  }\r\n\r\n  async addApplication(): Promise<any> {\r\n    if (this.applicationForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const appId = this.applicationForm.value.application;\r\n    const format = appId.replace(/\\ /g, '_').toLowerCase();\r\n    const attributes = this.applicationAttributes['app-attr-' + format];\r\n\r\n    this.selectedApplications.push({\r\n      id: new Date().getTime(),\r\n      appId,\r\n      attributes,\r\n      application: this.getApplicationBySystemId(appId)\r\n    });\r\n\r\n    this.toggleRemoveAppIfNotMultiple(appId);\r\n    this.applicationForm.reset();\r\n\r\n    // let app = this.applications.filter( x =>  x.id.toString() === appId)[0] as any;\r\n    // const attributes = await this.getApplicationAttributes(appId);\r\n    // const attributeDefaultValues: any = await this.getApplicationAttributeDefaults(appId);\r\n    // this.buildApplicationsFormArray(appId, attributeDefaultValues.defaultAppConfigs[0]);\r\n\r\n    // app = {\r\n    //   ...app,\r\n    //   attributes\r\n    // };\r\n    // this.selectedApplications.push(app);\r\n    // this.applicationForm.reset();\r\n    return;\r\n  }\r\n\r\n  private buildApplicationsFormArray(appId, defaultValues): void{\r\n\r\n    const arrayFormGroup = this.fb.group({\r\n      app_id: [appId, Validators.required],\r\n      center_cd: ['', Validators.required],\r\n      channel_cd: ['', Validators.required],\r\n      channel_id: ['', Validators.required],\r\n      function_group_id: ['', Validators.required],\r\n    });\r\n\r\n    if (defaultValues) {\r\n      arrayFormGroup.patchValue({\r\n        center_cd: defaultValues.centerCD,\r\n        channel_cd: defaultValues.channelCD,\r\n        channel_id: defaultValues.channelId,\r\n        function_group_id: defaultValues.functionGroupId,\r\n      });\r\n    }\r\n    this.applicationsFormArray.push(arrayFormGroup);\r\n  }\r\n\r\n  getAttributeFormName(attributeName): string{\r\n    const attrNameNoSpace = attributeName.replace(/\\ /g, '');\r\n    return this.commonAttributesForms[attrNameNoSpace];\r\n  }\r\n\r\n  async getApplicationAttributeDefaults(appId): Promise<any> {\r\n    const levelOneForm = this.levelOneForm.value;\r\n    if (\r\n      !levelOneForm.business_role_id &&\r\n      !levelOneForm.channel_id &&\r\n      !levelOneForm.job_duty_id &&\r\n      !levelOneForm.team_id\r\n    ) {\r\n      return new Promise((res, rej) => res({defaultAppConfigs: []}));\r\n    }\r\n\r\n    const levelOneData = {\r\n      applicationId: appId,\r\n      businessRoleId: levelOneForm.business_role_id,\r\n      channelId: levelOneForm.channel_id,\r\n      jobDutyId: levelOneForm.job_duty_id,\r\n      teamId: levelOneForm.team_id\r\n    };\r\n    const defaults = await this.api.list('default-app-config/getDefaultAttributes', levelOneData).toPromise();\r\n    return defaults;\r\n  }\r\n\r\n  async getApplicationAttributes(appId): Promise<any[]> {\r\n    const attributes = await this.api.list('attribute/getAllAppAttribute', { appId }).toPromise();\r\n\r\n    const attributesWithOptions = [];\r\n    for await (const attr of attributes) {\r\n      const options = await this.getAttributeOptions(appId, attr.category);\r\n      attributesWithOptions.push({\r\n        ...attr,\r\n        options\r\n      });\r\n    }\r\n    return attributesWithOptions;\r\n  }\r\n\r\n  async getAttributeOptions(appId, category ): Promise<any> {\r\n    const options = await this.api.list('attribute/findValuesByCategory', { appId, category}).toPromise();\r\n    return options;\r\n  }\r\n\r\n  isRoleAlreadySelected(id): boolean {\r\n    return this.selectedRoles.filter( x => x.id === id).length > 0;\r\n  }\r\n\r\n  isAppAlreadySelected(id): boolean{\r\n    return this.selectedApplications.filter( x => x.id === id).length > 0;\r\n  }\r\n\r\n  // removeApplication(id, index): void {\r\n  //   this.selectedApplications = this.selectedApplications.filter( x =>  x.id !== id);\r\n  //   this.applicationsFormArray.removeAt(index);\r\n\r\n  //   console.log(this.levelTwoForm.value);\r\n  // }\r\n  removeApplication(id): void {\r\n    this.selectedApplications = this.selectedApplications.filter((x) =>  {\r\n      if (x.id !== id) {\r\n        return true;\r\n      }\r\n      if (!x.allowMultiple) {\r\n        this.toggleRemoveAppIfNotMultiple(x.appId)\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  private resetData(): void{\r\n    this.firstLeveldata = {\r\n      jobDuties: [],\r\n      channels: [],\r\n      businessRoles: [],\r\n      teams: []\r\n    };\r\n\r\n    this.applications = [];\r\n  }\r\n\r\n  private getApplications(): void {\r\n    this.getListOf('application').then( x => {\r\n      this.applications = x;\r\n    });\r\n  }\r\n\r\n  private loadFirstLevelData(): void{\r\n    this.getListOf('job-duty').then( x => {\r\n      this.firstLeveldata.jobDuties = x;\r\n    });\r\n    this.getListOf('business-role').then( x => {\r\n      this.firstLeveldata.businessRoles = x;\r\n    });\r\n    this.getListOf('channel').then( x => {\r\n      this.firstLeveldata.channels = x;\r\n    });\r\n    this.getListOf('team').then( x => {\r\n      this.firstLeveldata.teams = x;\r\n    });\r\n  }\r\n\r\n  private getListOf(entity): Promise<any>{\r\n    return new Promise( (res, rej) => {\r\n      this.api.list(entity, {limit: 999, offset: 0}).subscribe( x => {\r\n        res(x);\r\n      });\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    if (this.levelOneForm.invalid || this.levelTwoForm.invalid) {\r\n      alert('All Fields are required');\r\n      return;\r\n    }\r\n\r\n    const levelOne  = this.levelOneForm.value;\r\n    const levelTwo  = this.levelTwoForm.value;\r\n    const data = {\r\n      ...levelOne,\r\n      applications: [\r\n        ...levelTwo.applications\r\n      ]\r\n    };\r\n\r\n    // this.api.create('preset', data).subscribe( x => {\r\n    //   this.levelOneForm.reset();\r\n    //   this.levelTwoForm.reset();\r\n    //   alert('Success');\r\n    // });\r\n\r\n    this.saveGeneralRoleToLocalStorage(levelOne);\r\n  }\r\n\r\n  private saveGeneralRoleToLocalStorage(levelOne) {\r\n    // const generalRoles = JSON.parse(localStorage.getItem('general-roles')) || [];\r\n    // generalRoles.push({\r\n    //   organization: this.firstLeveldata.jobDuties.filter(item => item.id == levelOne.job_duty_id)[0],\r\n    //   channel: this.firstLeveldata.channels.filter(item => item.id == levelOne.channel_id)[0],\r\n    //   team: this.firstLeveldata.teams.filter(item => item.id == levelOne.team_id)[0],\r\n    //   businessJobRole: this.firstLeveldata.businessRoles.filter(item => item.id == levelOne.business_role_id)[0],\r\n    //   id: new Date().getTime()\r\n    // });\r\n    // localStorage.setItem('general-roles', JSON.stringify(generalRoles));\r\n    this.levelOneForm.reset();\r\n    this.levelTwoForm.reset();\r\n  }\r\n\r\n  // getAttributeOptions(attrID): any {\r\n  //   return STATIC_DATA.attributes.filter ( x => x.id === attrID)[0];\r\n  // }\r\n\r\n  onSelectionChange(selectedList: IMultipleSelectionTag[]) {\r\n    const businessRoleObject = {};\r\n    this.selectedRoles = [];\r\n    this.selectedBusinessRoles = selectedList;\r\n    this.firstLeveldata.businessRoles.forEach(item => {\r\n      businessRoleObject[item.id] = item;\r\n    });\r\n    selectedList.forEach(item => {\r\n      this.selectedRoles.push(businessRoleObject[item.id]);\r\n    });\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-general-role-list',\r\n  templateUrl: './general-role-list.component.html',\r\n  styleUrls: ['./general-role-list.component.scss']\r\n})\r\nexport class GeneralRoleListComponent implements OnInit {\r\n\r\n  generalRoles = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.generalRoles = JSON.parse(localStorage.getItem('general-roles')) || [];\r\n  }\r\n\r\n  remove(generalRole) {\r\n    if (confirm('Are you sure you want to remove this general role?')) {\r\n      this.generalRoles = this.generalRoles.filter(item => item.id === generalRole.id);\r\n      localStorage.setItem('general-roles', JSON.stringify(this.generalRoles));\r\n    }\r\n  }\r\n}\r\n","<nav aria-label=\"breadcrumb\">\r\n    <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">General Role List</li>\r\n    </ol>\r\n</nav>\r\n\r\n<div class=\"table-list\">\r\n    <div class=\"table-list__buttons\">\r\n        <label></label>\r\n        <a routerLink=\"/general-roles/create\" type=\"button\" class=\"btn btn-sm btn-primary\">Add New General Role</a>\r\n    </div>\r\n    <table class=\"table table-sm\">\r\n        <thead>\r\n            <tr> \r\n                <th scope=\"col\">Organization</th>\r\n                <th scope=\"col\">Channel</th>\r\n                <th scope=\"col\">Team</th>\r\n                <th scope=\"col\">Business Job Role</th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody> \r\n            <tr *ngFor=\"let generalRole of generalRoles\"> \r\n                <td>\r\n                    {{generalRole.organization.name}}\r\n                </td>\r\n                <td>\r\n                    {{generalRole.channel.name}}\r\n                </td>\r\n                <td>\r\n                    {{generalRole.team.name}}\r\n                </td>\r\n                <td>\r\n                    {{generalRole.businessJobRole.name}}\r\n                </td>\r\n                <td class=\"table-list__actions\">\r\n                    <a routerLink=\"/general-roles/edit/{{generalRole.id}}\">edit</a>\r\n                    <a (click)=\"remove(generalRole)\">delete</a>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GeneralRolesComponent } from './general-roles/general-roles.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { GeneralRoleListComponent } from './general-role-list/general-role-list.component';\r\nimport { CreateGeneralRolesComponent } from './create-general-roles/create-general-roles.component';\r\nimport { EditGeneralRolesComponent } from './edit-general-roles/edit-general-roles.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: GeneralRolesComponent },\r\n  { path: 'list', component: GeneralRoleListComponent },\r\n  { path: 'create', component: CreateGeneralRolesComponent },\r\n  { path: 'edit/:generalRoleId', component: EditGeneralRolesComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [GeneralRolesComponent, GeneralRoleListComponent, CreateGeneralRolesComponent, EditGeneralRolesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class GeneralRolesModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { LocalDataService } from 'src/app/shared/services/local-data.service';\n\n@Component({\n  selector: 'app-general-roles',\n  templateUrl: './general-roles.component.html',\n  styleUrls: ['./general-roles.component.scss']\n})\nexport class GeneralRolesComponent implements OnInit {\n\n  model = {\n    organization : '',\n    team : '',\n    channel : '',\n    jobrole : '',\n  };\n\n  list = {\n    organization : [],\n    team : [],\n    channel : [],\n    jobrole : [],\n  };\n\n  constructor(\n    private localData: LocalDataService\n  ) { }\n\n  ngOnInit(): void {\n    const currentData = this.localData.get('general-roles') || {\n      organization : [],\n      team : [],\n      channel : [],\n      jobrole : [],\n    };\n\n    this.list = currentData;\n\n  }\n\n\n  save(what): void{\n    const value = this.model[what];\n    if (value.length === 0) {\n      return;\n    }\n    this.model[what] = '';\n    this.list[what].push({\n      id: new Date().getTime(),\n      name: value\n    });\n    this.saveLocalData();\n  }\n\n  delete(index, what): void {\n    const sure = confirm('Are you sure?');\n    if (!sure) {\n      return;\n    }\n\n    this.list[what] = this.list[what].filter( (el, i) => {\n      return i !== index;\n    });\n    this.saveLocalData();\n  }\n\n  private saveLocalData(): void{\n    this.localData.save('general-roles', this.list);\n  }\n}\n","<nav aria-label=\"breadcrumb\">\n    <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">General Role Maintenance</li>\n    </ol>\n</nav>\n\n\n<div class=\"table-list\">\n    <table class=\"table table-sm\">\n        <thead>\n            <tr> \n                <th scope=\"col\">Organization</th>\n                <th scope=\"col\">Channel</th>\n                <th scope=\"col\">Team</th>\n                <th scope=\"col\">Business Job Role</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr class=\"input-fields\"> \n                <th>\n                    <form (submit)=\"save('organization')\">\n                        <input [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"this.model.organization\" type=\"text\" class=\"form-control form-control-sm\">\n                        <button class=\"btn btn-primary btn-sm\" (click)=\"save('organization')\">+</button>\n                    </form>\n                </th>\n                <th>\n                    <form (submit)=\"save('channel')\">\n                        <input [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"this.model.channel\" type=\"text\" class=\"form-control form-control-sm\">\n                        <button class=\"btn btn-primary btn-sm\" (click)=\"save('channel')\">+</button>\n                    </form>\n                </th>\n                <th>\n                    <form (submit)=\"save('team')\">\n                        <input [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"this.model.team\" type=\"text\" class=\"form-control form-control-sm\">\n                        <button class=\"btn btn-primary btn-sm\" (click)=\"save('team')\">+</button>    \n                    </form>\n                </th>\n                <th>\n                    <form (submit)=\"save('jobrole')\">\n                        <input [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"this.model.jobrole\" type=\"text\" class=\"form-control form-control-sm\">\n                        <button class=\"btn btn-primary btn-sm\" (click)=\"save('jobrole')\">+</button>\n                    </form>\n                </th>\n            </tr>\n            <tr> \n                <td>\n                    <ul>\n                        <li *ngFor=\"let item of list.organization; let i = index\">\n                            {{item.name}}\n\n                            <a (click)=\"delete(i , 'organization')\">delete</a>\n                        </li>\n                    </ul>\n                </td>\n                <td>\n                    <ul>\n                        <li *ngFor=\"let item of list.channel; let i = index\">\n                            {{item.name}}\n                            \n                            <a (click)=\"delete(i , 'channel')\">delete</a>\n                        </li>\n                    </ul>\n                </td>\n                <td>\n                    <ul>\n                        <li *ngFor=\"let item of list.team; let i = index\">\n                            {{item.name}}\n                            \n                            <a (click)=\"delete(i , 'team')\">delete</a>\n                        </li>\n                    </ul>\n                </td>\n                <td>\n                    <ul>\n                        <li *ngFor=\"let item of list.jobrole; let i = index\">\n                            {{item.name}}\n\n                            <a (click)=\"delete(i , 'jobrole')\">delete</a>\n                        </li>\n                    </ul>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n"]}