{"version":3,"sources":["webpack:///src/app/modules/application/application-attribute-options/application-attribute-options.component.ts","webpack:///src/app/modules/application/application-attribute-options/application-attribute-options.component.html","webpack:///src/app/modules/application/application-view/application-view.component.html","webpack:///src/app/modules/application/application-view/application-view.component.ts","webpack:///src/app/modules/application/application.module.ts","webpack:///src/app/modules/application/application/application.component.html","webpack:///src/app/modules/application/application/application.component.ts","webpack:///src/app/modules/application/test/test.component.ts","webpack:///src/app/modules/application/test/test.component.html"],"names":["ApplicationAttributeOptionsComponent","formBuilder","localdata","attributeOptions","showDescription","buildForm","staticData","values","get","attrId","id","replace","toLowerCase","form","group","value","required","invalid","alert","formValues","translations","map","x","keyVal","langId","Number","language","data","Date","getTime","editId","push","reset","saveLocalData","setTimeout","option","patchValue","appendCurrentTranslations","removeControl","addControl","array","forEach","toString","sure","confirm","filter","toSave","oldvalues","save","add","selector","templateUrl","styleUrls","ApplicationViewComponent","api","router","wait","applicationAttributes","showModal","isExistingAttribute","allAttributes","applications","activeTab","JSON","parse","localStorage","getItem","application","applicationForm","getAllAttributes","appId","systemId","getApplicationAttribute","Object","attrs","attbId","length","sortedValues","sort","sortCompare","list","subscribe","roleAttr","type","existing","allowMultiple","app","modalTitle","saveButtonText","editAttribute","attbType","markAllAsTouched","attribute","attbTitle","order","generateNextOrder","atributeData","create","updateAttribute","allOptions","keys","atributeOptions","newAttrId","oldAttbId","a","b","roleAttributeId","toPromise","formValue","appAtribute","newAppId","systemDescription","apps","start","end","navigate","event","dragging","dataTransfer","setData","stringify","dropping","ev","preventDefault","getData","newOrder","console","log","lastkey","update","cancel","showAppForm","closeModal","submitForm","routes","path","component","ApplicationModule","forChild","declarations","imports","ApplicationComponent","loadData","lstApplications","englishExist","descriptions","includes","createApplication","saved","found","oldSystemId","TestComponent","fb","name"],"mappings":"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","file":"modules-application-application-module-es5.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LocalDataService } from 'src/app/shared/services/local-data.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-application-attribute-options',\n  templateUrl: './application-attribute-options.component.html',\n  styleUrls: ['./application-attribute-options.component.scss']\n})\nexport class ApplicationAttributeOptionsComponent implements OnInit {\n\n  public form: FormGroup;\n  public attributeOptions = [];\n  public showDescription = true;\n  public editId;\n  @Input() id: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private localdata: LocalDataService,\n  ) { }\n\n  ngOnInit(): void {\n    this.buildForm();\n\n    if (environment.staticData){\n      const values = this.localdata.get('attributeOptions');\n      if (!values){\n        return;\n      }\n\n      const attrId = this.id.replace(/\\ /g, '_').toLowerCase();\n      this.attributeOptions = values[`attr-opts-${attrId}`] || [];\n      return;\n    }\n  }\n\n  private buildForm(): void{\n    this.form = this.formBuilder.group({\n      value: ['', Validators.required]\n    });\n  }\n\n  add(): void {\n    if (this.form.invalid) {\n      alert('All fields are required');\n      return;\n    }\n\n    const formValues = this.form.value;\n\n    const translations = formValues.translations.map( x => {\n      return {\n        keyVal: formValues.value,\n        langId: Number(x.language),\n        value: x.value\n      };\n    });\n    formValues.translations = translations;\n    const data = {\n      id: new Date().getTime(),\n      value: formValues.value,\n      translations,\n      default: false\n    };\n    if (!this.editId) {\n      this.attributeOptions.push(data);\n    } else {\n      this.attributeOptions = this.attributeOptions.map( x => {\n        if (x.id === this.editId) {\n          return data;\n        }\n        return x;\n      });\n    }\n\n\n    this.form.reset();\n    this.showDescription = false;\n    this.saveLocalData();\n    setTimeout( x => {\n      this.showDescription = true;\n    }, 100);\n  }\n\n  setDefault(id, value): void{\n    this.attributeOptions.map( x => {\n      if (id === x.id) {\n        x.default = !value;\n      } else {\n        x.default = false;\n      }\n      return x;\n    });\n    this.saveLocalData();\n  }\n\n  edit(option): void{\n    this.editId = option.id;\n    this.form.get('value').patchValue(option.value);\n    this.showDescription = false;\n    setTimeout( x => {\n      this.showDescription = true;\n      this.appendCurrentTranslations(option.translations);\n    });\n  }\n\n  cancelEdit(): void{\n    this.editId = null;\n    this.form.reset();\n    this.showDescription = false;\n    setTimeout( x => {\n      this.showDescription = true;\n    });\n  }\n\n  private appendCurrentTranslations(translations: any[]): void{\n    this.form.removeControl('translations');\n    this.form.addControl('translations', this.formBuilder.array([], Validators.required));\n\n    translations.forEach( x => {\n      const group = this.formBuilder.group({\n        language: [x.langId.toString(), Validators.required],\n        value: [x.value, Validators.required]\n      });\n      (this.form.get('translations') as FormArray).push(group);\n    });\n  }\n\n  delete(id): void{\n    const sure = confirm('Are you sure?');\n    if (!sure) {\n      return;\n    }\n\n    this.attributeOptions = this.attributeOptions.filter( x => x.id !== id);\n    this.saveLocalData();\n  }\n\n  private saveLocalData(): void {\n    const attrId = this.id.replace(/\\ /g, '_').toLowerCase();\n    const toSave = {\n      ['attr-opts-' + attrId]: this.attributeOptions\n    };\n    const oldvalues = this.localdata.get('attributeOptions');\n    if (!oldvalues){\n      this.localdata.save('attributeOptions', {\n        ...toSave\n      });\n    } else {\n      this.localdata.save('attributeOptions', {\n        ...oldvalues,\n        ...toSave\n      });\n    }\n  }\n}\n","<ul class=\"nav nav-tabs\" >\n    <li class=\"nav-item\">\n        <a class=\"nav-link active\">Options</a>\n      </li>\n</ul>\n<form class=\"fform fform--inline optionsForm\" [formGroup]=\"form\">\n    <div class=\"form-group flex-2\" >\n      <label>Description:</label> \n      <app-language-field *ngIf=\"showDescription\" [title]=\"'Description'\" [form]=\"form\"></app-language-field> \n    </div>\n    <div class=\"form-group\">\n        <label>Value: </label>\n        <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"value\">\n    </div>\n    <button type=\"button\" class=\"btn btn-sm  btn-primary\" (click)=\"add()\">{{editId ? 'Update' : 'Add'}}</button>\n    <button *ngIf=\"editId\" type=\"button\" class=\"btn btn-sm  btn-secondary\" (click)=\"cancelEdit()\">Cancel</button>\n</form>\n\n<div class=\"table-list optionsList\" >  \n    <table class=\"table table-sm\">\n        <thead>\n            <tr> \n                <th scope=\"col\">Description</th>\n                <th scope=\"col\">Value</th>\n                <th scope=\"col\">Default</th>\n                <th scope=\"col\"></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let option of attributeOptions\"> \n                <td>\n                    {{option.translations | itranslate}}\n                </td>\n                <td>\n                    {{option.value}}\n                </td>\n                <td>\n                    <div class=\"form-check\">\n                        <input \n                            (change)=\"setDefault(option.id, option.default)\"\n                            type=\"checkbox\" class=\"form-check-input\" [checked]=\"option.default\"> \n                    </div>\n                </td>\n                <td class=\"table-list__actions\">\n                    <a (click)=\"edit(option)\">edit</a> | <a (click)=\"delete(option.id)\">delete</a>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>     ","<nav aria-label=\"breadcrumb\">\r\n    <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\">\r\n            <a [routerLink]=\"['/application']\">Application Maintenance</a>\r\n        </li>\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n            {{application.systemId}}\r\n        </li>\r\n    </ol>\r\n</nav>\r\n\r\n\r\n<form [formGroup]=\"applicationForm\" class=\"section \">\r\n    <!-- <label class=\"mb-3\">\r\n        <input formControlName=\"allowMultiple\" type=\"checkbox\" />\r\n        Allow multiple\r\n    </label> -->\r\n    <div class=\"application fform fform--inline\">\r\n        <div class=\"form-group form-group-sm\">\r\n            <label>\r\n                System ID:\r\n                <!-- <strong>{{application.systemId}}</strong> -->\r\n            </label>\r\n            <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"systemId\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label>\r\n                Description:\r\n                <app-language-field [title]=\"'Description'\" [form]=\"applicationForm\"></app-language-field>\r\n                <!-- <strong>{{application.translations | itranslate}}</strong> -->\r\n            </label>\r\n            <!-- <textarea class=\"form-control form-control-sm\" rows=\"3\" readonly></textarea> -->\r\n        </div>\r\n        <div class=\"form-group form-group-sm allowMultiple\">\r\n            <label>\r\n                Allow Multiple:\r\n                <input formControlName=\"allowMultiple\" type=\"checkbox\" />\r\n            </label>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <button class=\"btn btn-sm btn-primary\" (click)=\"update()\">Update</button>\r\n            <button class=\"btn btn-sm btn-secondary\" (click)=\"cancel()\">Cancel</button>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<div class=\"table-list\">\r\n\r\n    <div class=\"table-list__buttons\">\r\n        <label>Attributes</label>\r\n        <button type=\"button\" class=\"btn btn-sm btn-success\" (click)=\"showAppForm('add')\">Add New Attribute</button>\r\n    </div>\r\n\r\n   \r\n    <table class=\"table table-sm draggable\">\r\n        <thead>\r\n            <tr> \r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">Title</th>\r\n                <th scope=\"col\">Type</th>                \r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <!-- 'top' : this.dragging && this.dragging.order > attribute.order,\r\n            'bottom' : this.dragging && this.dragging.order < attribute.order -->\r\n\r\n            <tr \r\n                [ngClass]=\"{\r\n                    'dragging': this.dragging && this.dragging.attbId === attribute.attbId && this.dragging !== this.dropping,\r\n                    'dropping': this.dropping && this.dropping.attbId === attribute.attbId && this.dragging !== this.dropping\r\n                }\"\r\n                (drop)=\"drop($event, attribute)\" \r\n                (dragover)=\"allowDrop($event, attribute)\"\r\n                \r\n                *ngFor=\"let attribute of applicationAttributes\"> \r\n                <td>\r\n                    \r\n                    <label class=\"dragLabel\" draggable=\"true\" (dragstart)=\"drag(attribute, $event)\" (dragend)=\"dragend()\">\r\n                        <img src=\"./assets/images/drag-icon.svg\"/>\r\n                        {{attribute.attbId}}\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    {{ attribute.translations | itranslate }}\r\n                </td>\r\n                <td>\r\n                    {{attribute.attbType}}\r\n                </td>\r\n                <td class=\"table-list__actions\">\r\n                    <!-- <a>view</a> | -->\r\n                    <a (click)=\"showAppForm('edit', attribute)\">edit</a> |\r\n                    <a (click)=\"delete(attribute)\">delete</a>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n<app-modal class=\"large\" [show]=\"showModal\" [saveBtn]=\"saveButtonText\" [closeBtn]=\"'Cancel'\" [title]=\"modalTitle\"\r\n    (close)=\"closeModal()\" (submit)=\"submitForm()\">\r\n    <!-- <ul class=\"nav nav-tabs\" *ngIf=\"activeTab !== 'options'\">\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link active\">Details</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"activeTab='options'\">Options</a>\r\n        </li>\r\n    </ul> -->\r\n    <form [formGroup]=\"form\" class=\"fform fform--inline\">\r\n        <div *ngIf=\"!editAttribute\" class=\"form-check form-check-inline existingAttribute\">\r\n            <input (change)=\"toggleExistingAttribute()\" class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\"\r\n                [checked]=\"isExistingAttribute\">\r\n            <label class=\"form-check-label\" for=\"inlineCheckbox1\">Copy Attribute</label>\r\n        </div>\r\n        <ng-container *ngIf=\"isExistingAttribute\">\r\n            <div class=\"form-group\">\r\n                <label>Application: </label>\r\n                <select #selectedApp class=\"form-control form-control-sm\">\r\n                    <option></option>\r\n                    <ng-container *ngFor=\"let app of applications\">\r\n                        <option [value]=\"app.systemId\" *ngIf=\"app.systemId !== application.systemId\">{{app.systemId}}</option>\r\n                    </ng-container>\r\n                </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Attribute:</label>\r\n                <select [ngClass]=\"{'is-invalid': form.controls.existing.invalid && form.controls.existing.touched}\"\r\n                    formControlName=\"existing\" class=\"form-control form-control-sm\">\r\n                    <option></option>\r\n                    <ng-container *ngFor=\"let attr of allAttributes\">\r\n                        <option *ngIf=\"!hasAttribute(attr.attbId) && attr.systemId === selectedApp.value\" [value]=\"attr.attbId\">{{attr.attbId}}\r\n                        </option>\r\n                    </ng-container>\r\n\r\n                </select>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!isExistingAttribute\">\r\n            <div class=\"form-group\">\r\n                <label>ID: </label>\r\n                <input formControlName=\"id\" type=\"text\" class=\"form-control form-control-sm\"\r\n                    [ngClass]=\"{'is-invalid': form.controls.id.invalid && form.controls.id.touched}\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Type: </label>\r\n                <select [ngClass]=\"{'is-invalid': form.controls.type.invalid && form.controls.type.touched}\"\r\n                    formControlName=\"type\" class=\"form-control form-control-sm\">\r\n                    <option></option>\r\n                    <option value=\"string\">String</option>\r\n                    <option value=\"numeric\">Numeric</option>\r\n                    <option value=\"boolean\">Boolean</option>\r\n                </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Title: </label>\r\n                <app-language-field [title]=\"'Title'\" *ngIf=\"showModal\" [form]=\"form\"></app-language-field>\r\n            </div>\r\n        </ng-container>\r\n\r\n    </form>\r\n    <br>\r\n\r\n    <app-application-attribute-options [id]=\"editAttribute.attbId\" *ngIf=\"editAttribute && showModal\"></app-application-attribute-options>\r\n\r\n\r\n</app-modal>","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { JkWaitService } from 'jk-wait';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { LocalDataService } from 'src/app/shared/services/local-data.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IApplication } from '../../../shared/interfaces/iapplication';\r\n\r\nexport interface IApplicationAttribute  {\r\n  id: string;\r\n  type: string;\r\n  translations: any[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-application-view',\r\n  templateUrl: './application-view.component.html',\r\n  styleUrls: ['./application-view.component.scss']\r\n})\r\nexport class ApplicationViewComponent implements OnInit {\r\n\r\n  public application: IApplication;\r\n  public applicationAttributes: any[] = [];\r\n  public modalTitle: string;\r\n  public saveButtonText: string;\r\n  public editAttribute: any;\r\n  public form: FormGroup;\r\n  public applicationForm: FormGroup;\r\n  public showModal = false;\r\n  public isExistingAttribute = false;\r\n  public allAttributes = [];\r\n  public dragging: any;\r\n  public dropping: any;\r\n  public applications: IApplication[] = [];\r\n\r\n  // TEMP\r\n  activeTab = 'details';\r\n\r\nconstructor(\r\n    private formBuilder: FormBuilder,\r\n    private localdata: LocalDataService,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private wait: JkWaitService\r\n  ) {\r\n    // TODO : remove if after api integration\r\n    this.applications = JSON.parse(localStorage.getItem('localData')).applications;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.application = this.localdata.get('application');\r\n    this.buildForm();\r\n    setTimeout( x => {\r\n      this.appendCurrentTranslations(this.applicationForm, this.application.translations);\r\n    }, 0);\r\n\r\n    if (environment.staticData){\r\n      const values = this.localdata.get('applicationAttributes');\r\n      this.getAllAttributes();\r\n      if (!values){\r\n        return;\r\n      }\r\n\r\n      const appId = this.application.systemId.replace(/\\ /g, '_').toLowerCase();\r\n      this.applicationAttributes = values[`app-attr-${appId}`] || [];\r\n      return;\r\n    }\r\n\r\n    this.applicationAttributes = [];\r\n    this.getApplicationAttribute(this.application.systemId);\r\n  }\r\n\r\n  getAllAttributes(): any{\r\n    const values = this.localdata.get('applicationAttributes');\r\n    if (!values){\r\n      return;\r\n    }\r\n    Object.values(values).forEach((attrs: any) => {\r\n      this.allAttributes = [\r\n        ...this.allAttributes,\r\n        ...attrs\r\n      ];\r\n    });\r\n    return values;\r\n  }\r\n\r\n  hasAttribute(id): boolean{\r\n    return this.applicationAttributes.filter( x => x.attbId === id).length > 0;\r\n  }\r\n\r\n  toggleExistingAttribute(): void{\r\n    this.isExistingAttribute = !this.isExistingAttribute;\r\n    this.form.reset();\r\n  }\r\n\r\n  private saveLocalData(): void {\r\n    const appId = this.application.systemId.replace(/\\ /g, '_').toLowerCase();\r\n    const sortedValues = this.applicationAttributes.sort(this.sortCompare);\r\n    const toSave = {\r\n      ['app-attr-' + appId]: sortedValues\r\n    };\r\n    const oldvalues = this.localdata.get('applicationAttributes');\r\n    if (!oldvalues){\r\n      this.localdata.save('applicationAttributes', {\r\n        ...toSave\r\n      });\r\n    } else {\r\n      this.localdata.save('applicationAttributes', {\r\n        ...oldvalues,\r\n        ...toSave\r\n      });\r\n    }\r\n  }\r\n\r\n  getApplicationAttribute(id: string): void{\r\n    this.api.list('applicationroleattribute/getApplicationRoleAttribute', {\r\n      systemId: id\r\n    }).subscribe( x => {\r\n      this.applicationAttributes = x.roleAttr;\r\n    });\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = this.formBuilder.group({\r\n      id: ['', [Validators.required]],\r\n      type: ['', [Validators.required]],\r\n      existing: ['', []],\r\n    });\r\n    this.applicationForm = this.formBuilder.group({\r\n      systemId: [this.application.systemId, [Validators.required]],\r\n      allowMultiple: [this.application.allowMultiple]\r\n    });\r\n  }\r\n\r\n\r\n  showAppForm(type: string, app?: any): void {\r\n    if (type === 'add') {\r\n      this.modalTitle = 'New Attibute';\r\n      this.saveButtonText = 'Save';\r\n      this.editAttribute = null;\r\n    } else {\r\n      this.editAttribute = app;\r\n      this.saveButtonText = 'Update';\r\n      this.modalTitle = `Edit ${app.attbId}`;\r\n      this.form.get('id').patchValue(app.attbId);\r\n      this.form.get('type').patchValue(app.attbType);\r\n      setTimeout( x => {\r\n        this.appendCurrentTranslations(this.form, app.translations);\r\n      }, 0);\r\n    }\r\n\r\n    this.showModal = true;\r\n  }\r\n\r\n  private appendCurrentTranslations(form, translations: any[]): void{\r\n    translations.forEach( x => {\r\n      const group = this.formBuilder.group({\r\n        language: [x.langId.toString(), Validators.required],\r\n        value: [x.value, Validators.required]\r\n      });\r\n      (form.get('translations') as FormArray).push(group);\r\n    });\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.form.reset();\r\n    this.showModal = false;\r\n    this.isExistingAttribute = false;\r\n  }\r\n\r\n\r\n  submitForm(): void{\r\n    this.form.markAllAsTouched();\r\n\r\n    if (this.isExistingAttribute) {\r\n      const attrId = this.form.value.existing;\r\n      if (attrId.length === 0){\r\n        return;\r\n      }\r\n      const attribute = this.allAttributes.filter( x => x.attbId === attrId)[0];\r\n      this.applicationAttributes.push(attribute);\r\n      this.saveLocalData();\r\n      this.form.reset();\r\n      this.showModal = false;\r\n      this.isExistingAttribute = false;\r\n      return;\r\n    }\r\n\r\n    if (this.form.invalid) {\r\n      alert('All fields are required');\r\n      return;\r\n    }\r\n\r\n    const {id, type, translations}: IApplicationAttribute = this.form.value;\r\n\r\n    const data = {\r\n      attbId: id,\r\n      attbType: type,\r\n      attbTitle: id,\r\n      systemId: this.application.systemId,\r\n      translations: translations.map( x => {\r\n        return {\r\n          keyVal: id,\r\n          langId: Number(x.language),\r\n          value: x.value\r\n        };\r\n      })\r\n    };\r\n\r\n    if (!this.editAttribute) {\r\n      if (environment.staticData) {\r\n        const order =  this.generateNextOrder();\r\n        const atributeData = {\r\n          ...data,\r\n          order\r\n        };\r\n        this.applicationAttributes.push(atributeData);\r\n        this.saveLocalData();\r\n        this.editAttribute = atributeData;\r\n        this.modalTitle = 'Edit ' + id;\r\n        this.saveButtonText = 'Update';\r\n        // this.form.reset();\r\n        return;\r\n      }\r\n\r\n      this.api.create('roleattribute/createRoleAttribute', data).subscribe( x => {\r\n        this.showModal = false;\r\n        this.form.reset();\r\n      });\r\n    } else {\r\n      this.updateAttribute(data, this.editAttribute);\r\n    }\r\n  }\r\n\r\n  updateAttribute(data, editAttribute): void {\r\n\r\n    if (environment.staticData) {\r\n\r\n      // update options id if id changed\r\n      if (editAttribute.attbId !== data.attbId) {\r\n          let allOptions = this.localdata.get('attributeOptions');\r\n          if (Object.keys(allOptions).length > 0) {\r\n            const attrId = editAttribute.attbId.replace(/\\ /g, '_').toLowerCase();\r\n            const atributeOptions = allOptions['attr-opts-' + attrId];\r\n            delete allOptions['attr-opts-' + attrId];\r\n            const newAttrId = data.attbId.replace(/\\ /g, '_').toLowerCase();\r\n            allOptions = {\r\n              ...allOptions,\r\n              ['attr-opts-' + newAttrId] : atributeOptions\r\n            };\r\n            this.localdata.save('attributeOptions', allOptions);\r\n          }\r\n      }\r\n\r\n\r\n      this.applicationAttributes = this.applicationAttributes.filter( x => x.attbId !== editAttribute.attbId);\r\n      this.applicationAttributes.push({\r\n        ...data,\r\n        order: editAttribute.order\r\n      });\r\n      this.saveLocalData();\r\n      this.form.reset();\r\n      this.showModal = false;\r\n      return;\r\n    }\r\n\r\n    this.api.create('roleattribute/updateRoleAttribute', {\r\n      ...data,\r\n      oldAttbId: editAttribute.attbId,\r\n    }).subscribe( x => {\r\n      this.showModal = false;\r\n      this.form.reset();\r\n    });\r\n  }\r\n\r\n  sortCompare( a, b ): number{\r\n    if ( a.order < b.order ){\r\n      return -1;\r\n    }\r\n    if ( a.order > b.order ){\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  async delete(app: any): Promise<any> {\r\n    const sure = confirm('Are you sure?');\r\n    if (!sure){\r\n      return;\r\n    }\r\n\r\n    if (environment.staticData) {\r\n      this.applicationAttributes = this.applicationAttributes.filter( x => x.attbId !== app.attbId);\r\n      this.saveLocalData();\r\n      return;\r\n    }\r\n    const data = {\r\n      roleAttributeId: app.attbId,\r\n      systemId: this.application.systemId\r\n    };\r\n    await this.api.create('applicationroleattribute/deleteApplicationRoleAttribute', data).toPromise();\r\n    this.applicationAttributes = this.applicationAttributes.filter( x => app.attbId !== x.attbId);\r\n  }\r\n\r\n\r\n  update(): void {\r\n    const formValue = this.applicationForm.value;\r\n    const translations = formValue.translations.map( x => {\r\n      return {\r\n        keyVal: formValue.systemId,\r\n        langId: Number(x.language),\r\n        value: x.value\r\n      };\r\n    });\r\n    // const updateData = {\r\n    //   oldSystemId: this.application.systemId,\r\n    //   systemDescription: formValue.systemId,\r\n    //   systemId: formValue.systemId,\r\n    //   translations,\r\n    // };\r\n\r\n    // update application attributes id if id changed\r\n    if (this.application.systemId !== formValue.systemId) {\r\n      let allAttributes = this.localdata.get('applicationAttributes');\r\n      if (Object.keys(allAttributes).length > 0) {\r\n        const appId = this.application.systemId.replace(/\\ /g, '_').toLowerCase();\r\n        const appAtribute = allAttributes['app-attr-' + appId];\r\n        delete allAttributes['app-attr-' + appId];\r\n        const newAppId = formValue.systemId.replace(/\\ /g, '_').toLowerCase();\r\n        allAttributes = {\r\n          ...allAttributes,\r\n          ['app-attr-' + newAppId] : appAtribute\r\n        };\r\n        this.localdata.save('applicationAttributes', allAttributes);\r\n      }\r\n    }\r\n\r\n    this.localdata.save('application' , {\r\n      systemId: formValue.systemId,\r\n      systemDescription: formValue.systemId,\r\n      allowMultiple: formValue.allowMultiple,\r\n      translations,\r\n    });\r\n\r\n    const apps = this.localdata.get('applications').map( x => {\r\n      if (x.systemId === this.application.systemId) {\r\n        x.systemId = formValue.systemId;\r\n        x.systemDescription = formValue.systemId;\r\n        x.allowMultiple = formValue.allowMultiple;\r\n        x.translations = translations;\r\n      }\r\n      return x;\r\n    });\r\n    this.localdata.save('applications' , apps);\r\n\r\n    this.wait.start();\r\n    setTimeout( x => {\r\n      alert('Success');\r\n      this.wait.end();\r\n    }, 500);\r\n\r\n  }\r\n\r\n  cancel(): void{\r\n    this.router.navigate(['application']);\r\n  }\r\n\r\n  drag(attribute, event): void {\r\n    this.dragging = attribute;\r\n    event.dataTransfer.setData('attr', JSON.stringify(attribute));\r\n  }\r\n\r\n  dragend(): void{\r\n    this.dragging = null;\r\n    this.dropping = null;\r\n  }\r\n\r\n  allowDrop(ev, attribute): void{\r\n    ev.preventDefault();\r\n    this.dropping = attribute;\r\n  }\r\n\r\n  drop(ev, attribute): void{\r\n    ev.preventDefault();\r\n    const data = JSON.parse(ev.dataTransfer.getData('attr'));\r\n    const newOrder = attribute.order;\r\n\r\n    if (newOrder === data.order) {\r\n      return;\r\n    }\r\n\r\n    this.applicationAttributes = this.applicationAttributes.map( x => {\r\n      console.log(x.order + ' = ' + data.order + ' - ' + newOrder);\r\n\r\n      if (data.order > newOrder) {\r\n        if (x.order === data.order){\r\n          x.order = newOrder;\r\n        } else if (x.order >= newOrder && x.order <= data.order) {\r\n          x.order = x.order + 1;\r\n        }\r\n      } else {\r\n        if (x.order === data.order){\r\n          x.order = newOrder;\r\n        } else if ( x.order <= newOrder && x.order >= data.order) {\r\n          x.order = x.order - 1;\r\n        }\r\n      }\r\n\r\n      return x;\r\n    });\r\n    this.saveLocalData();\r\n  }\r\n\r\n  generateNextOrder(): number {\r\n    const keys = Object.keys(this.applicationAttributes);\r\n    const lastkey = keys[keys.length - 1];\r\n    return (this.applicationAttributes[lastkey].order) + 1;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ApplicationComponent } from './application/application.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ApplicationViewComponent } from './application-view/application-view.component';\nimport { TestComponent } from './test/test.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ApplicationAttributeOptionsComponent } from './application-attribute-options/application-attribute-options.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ApplicationComponent\n  },\n  {\n    path: ':id',\n    component: ApplicationViewComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    ApplicationComponent,\n    ApplicationViewComponent,\n    TestComponent,\n    ApplicationAttributeOptionsComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ApplicationModule { }\n","<nav aria-label=\"breadcrumb\">\r\n    <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Application Maintenance</li>\r\n    </ol>\r\n</nav>\r\n\r\n<div class=\"table-list\">\r\n    <div class=\"table-list__buttons\">\r\n        <label></label>\r\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"showAppForm('add')\">Add New Application</button>\r\n    </div>\r\n\r\n    <table class=\"table table-sm\">\r\n        <thead>\r\n            <tr> \r\n                <th scope=\"col\">System ID</th>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\">Allow Multiple</th>\r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let app of applications\"> \r\n                <td>{{app.systemId}} </td>\r\n                <td>{{app.translations | itranslate}}</td>\r\n                <td>{{app.allowMultiple ? 'Yes' : 'No'}}</td>\r\n                <td class=\"table-list__actions\">\r\n                    <!-- <a (click)=\"view(app)\">view</a> | \r\n                    <a (click)=\"showAppForm('edit', app)\">edit</a> |  -->\r\n                    <a (click)=\"view(app)\">edit</a>\r\n                    <a (click)=\"delete(app)\">delete</a>\r\n                </td>\r\n            </tr> \r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n<app-modal\r\n    [show]=\"showModal\"\r\n    [saveBtn]=\"saveButtonText\"\r\n    [closeBtn]=\"'Cancel'\"\r\n    [title]=\"modalTitle\"\r\n    (close)=\"closeModal()\"\r\n    (submit)=\"submitForm()\"\r\n>\r\n    <form [formGroup]=\"form\" *ngIf=\"form\">\r\n        <div class=\"form-group\">\r\n            <label>\r\n                <input formControlName=\"allowMultiple\" type=\"checkbox\" />\r\n                Allow multiple\r\n            </label>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label>System ID</label> \r\n            <input \r\n              formControlName=\"systemId\" type=\"text\" class=\"form-control\" \r\n              [ngClass]=\"{'is-invalid': form.controls.systemId.invalid && form.controls.systemId.touched}\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label>Description: </label>\r\n            <!-- <textarea formControlName=\"description\" type=\"text\" class=\"form-control\" ></textarea> -->\r\n            <app-language-field [title]=\"'Description'\" [form]=\"form\" *ngIf=\"showModal\"></app-language-field> \r\n        </div>\r\n    </form>\r\n</app-modal>","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { LocalDataService } from 'src/app/shared/services/local-data.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IApplication } from '../../../shared/interfaces/iapplication';\r\n\r\n@Component({\r\n  selector: 'app-application',\r\n  templateUrl: './application.component.html',\r\n  styleUrls: ['./application.component.scss']\r\n})\r\nexport class ApplicationComponent implements OnInit {\r\n\r\n  public language = environment.language;\r\n  public modalTitle: string;\r\n  public saveButtonText = 'Save';\r\n  public form: FormGroup;\r\n  public descriptionForm: FormGroup;\r\n  public showModal = false;\r\n  public editId: string;\r\n\r\n  applications = [\r\n    {\r\n      systemId: 'SVC',\r\n      systemDescription: 'SVC',\r\n      allowMultiple: false,\r\n      translations: [\r\n        {\r\n          id: 1,\r\n          keyVal: 'SVC',\r\n          langId: 1,\r\n          value: 'Single View Customer'\r\n        },\r\n        {\r\n          id: 2,\r\n          keyVal: 'SVC',\r\n          langId: 2,\r\n          value: '单视图客户'\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private api: ApiService,\r\n    private localdata: LocalDataService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n\r\n    if (environment.staticData){\r\n\r\n      if (!this.localdata.get('applications')){\r\n        this.localdata.save('applications', this.applications);\r\n      } else {\r\n        this.applications = this.localdata.get('applications');\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    this.loadData();\r\n  }\r\n\r\n  private async loadData(): Promise<any>{\r\n    this.applications = [];\r\n    const list =  await this.api.list('application/getAllApplication').toPromise();\r\n    this.applications = list.lstApplications;\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = this.formBuilder.group({\r\n      systemId: ['', [Validators.required]],\r\n      allowMultiple: false\r\n    });\r\n  }\r\n\r\n  showAppForm(type: string, app?: IApplication): void {\r\n    if (type === 'add') {\r\n      this.modalTitle = 'New Application';\r\n      this.saveButtonText = 'Save';\r\n      this.editId = null;\r\n    } else {\r\n      this.saveButtonText = 'Update';\r\n      this.modalTitle = `Edit ${app.systemId}`;\r\n      this.editId = app.systemId;\r\n      this.form.get('systemId').patchValue(app.systemId);\r\n      setTimeout( x => {\r\n        this.appendCurrentTranslations(app.translations);\r\n      }, 0);\r\n    }\r\n\r\n    this.showModal = true;\r\n  }\r\n\r\n  private appendCurrentTranslations(translations: any[]): void{\r\n    translations.forEach( x => {\r\n      const group = this.formBuilder.group({\r\n        language: [x.langId.toString(), Validators.required],\r\n        value: [x.value, Validators.required]\r\n      });\r\n      (this.form.get('translations') as FormArray).push(group);\r\n    });\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.form.reset();\r\n    this.showModal = false;\r\n  }\r\n\r\n\r\n  async submitForm(): Promise<any> {\r\n    this.form.markAllAsTouched();\r\n    const { systemId, translations, allowMultiple }: IApplication = this.form.value;\r\n    if (this.form.invalid) {\r\n      alert('All fields are required');\r\n      return;\r\n    }\r\n\r\n    if (!this.englishExist(translations)) {\r\n      alert('English translation is required');\r\n      return;\r\n    }\r\n\r\n    this.showModal = false;\r\n    const descriptions = translations.map( x => {\r\n      return {\r\n        keyVal: systemId,\r\n        langId: Number(x.language),\r\n        value: x.value\r\n      };\r\n    });\r\n\r\n    const data = {\r\n      systemDescription: systemId,\r\n      systemId,\r\n      translations: descriptions,\r\n      allowMultiple\r\n    };\r\n\r\n    if (this.modalTitle.includes('Edit')) {\r\n      // await this.updateApplication(data);\r\n      return;\r\n    }\r\n    await this.createApplication(data);\r\n  }\r\n\r\n\r\n  // async updateApplication(data): Promise<any>{\r\n  //   const updateData = {\r\n  //     oldSystemId: this.editId,\r\n  //     ...data\r\n  //   };\r\n\r\n  //   if (environment.staticData){\r\n  //     this.updateApplicationList(data.systemId, updateData.translations);\r\n  //     this.saveLocalData();\r\n  //     return;\r\n  //   }\r\n\r\n  //   const updated = await this.api.create('application/updateApplication', updateData).toPromise();\r\n  //   this.updateApplicationList(data.systemId, updated.application.translations);\r\n  //   this.form.reset();\r\n  // }\r\n\r\n  private updateApplicationList(systemId, translations): void{\r\n    this.applications = this.applications.map( x => {\r\n      if ( x.systemId === this.editId ) {\r\n        x.systemId = systemId;\r\n        x.translations = translations;\r\n      }\r\n      return x;\r\n    });\r\n  }\r\n\r\n  async createApplication(data): Promise<any>{\r\n    if (environment.staticData){\r\n      this.applications.push({\r\n        systemId: data.systemId,\r\n        systemDescription: data.systemId,\r\n        allowMultiple: data.allowMultiple,\r\n        translations: data.translations.map( x => {\r\n          return {\r\n            id: new Date().getTime(),\r\n            ...x\r\n          };\r\n        })\r\n      });\r\n      this.saveLocalData();\r\n      this.form.reset();\r\n      return;\r\n    }\r\n    const saved = await this.api.create('application/createApplication', data).toPromise();\r\n    this.form.reset();\r\n    this.applications.push(saved.application);\r\n  }\r\n\r\n  englishExist(translations): boolean {\r\n    const found = translations.filter( x => x.language === '1').length > 0;\r\n    return found;\r\n  }\r\n\r\n  async delete(app: IApplication): Promise<any> {\r\n    const sure = confirm('Are you sure?');\r\n    if (!sure){\r\n      return;\r\n    }\r\n\r\n    if (environment.staticData){\r\n      this.applications = this.applications.filter( x => {\r\n        return x.systemId !== app.systemId;\r\n      });\r\n      this.saveLocalData();\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      oldSystemId: app.systemId,\r\n      ...app\r\n    };\r\n    await this.api.create('application/deleteApplication', data).toPromise();\r\n    this.applications = this.applications.filter( x => x.systemId !== app.systemId);\r\n  }\r\n\r\n  view(app: IApplication): void{\r\n    this.localdata.save('application', app);\r\n    setTimeout( x => {\r\n      this.router.navigate(['application', app.systemId]);\r\n    }, 250);\r\n  }\r\n\r\n  private saveLocalData(): void{\r\n    this.localdata.save('applications', this.applications);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      name: 'test'\n    });\n  }\n\n}\n","<p>test works!</p>\n\n<form [formGroup]=\"form\">\n    <input type=\"text\" formControlName=\"name\">\n</form>"]}