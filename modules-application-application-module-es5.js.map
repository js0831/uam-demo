{"version":3,"sources":["webpack:///src/app/modules/application/application-attribute-options/application-attribute-options.component.ts","webpack:///src/app/modules/application/application-attribute-options/application-attribute-options.component.html","webpack:///src/app/modules/application/application-view/application-view.component.html","webpack:///src/app/modules/application/application-view/application-view.component.ts","webpack:///src/app/modules/application/application.module.ts","webpack:///src/app/modules/application/application/application.component.html","webpack:///src/app/modules/application/application/application.component.ts","webpack:///src/app/modules/application/test/test.component.ts","webpack:///src/app/modules/application/test/test.component.html"],"names":["ApplicationAttributeOptionsComponent","formBuilder","localdata","attributeOptions","showDescription","buildForm","staticData","values","get","attrId","id","replace","toLowerCase","form","group","value","required","invalid","alert","formValues","translations","map","x","keyVal","langId","Number","language","data","Date","getTime","editId","push","reset","saveLocalData","setTimeout","option","patchValue","appendCurrentTranslations","removeControl","addControl","array","forEach","toString","sure","confirm","filter","toSave","oldvalues","save","add","selector","templateUrl","styleUrls","ApplicationViewComponent","api","applicationAttributes","showModal","isExistingAttribute","allAttributes","activeTab","application","getAllAttributes","appId","systemId","getApplicationAttribute","Object","attrs","attbId","length","list","subscribe","roleAttr","console","log","type","existing","app","modalTitle","saveButtonText","attbType","markAllAsTouched","attribute","attbTitle","create","updateAttribute","oldId","oldAttbId","roleAttributeId","toPromise","showAppForm","closeModal","submitForm","routes","path","component","ApplicationModule","forChild","declarations","imports","ApplicationComponent","router","applications","systemDescription","loadData","lstApplications","englishExist","descriptions","includes","updateApplication","createApplication","updateData","oldSystemId","updateApplicationList","updated","saved","found","navigate","TestComponent","fb","name"],"mappings":"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","file":"modules-application-application-module-es5.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LocalDataService } from 'src/app/shared/services/local-data.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-application-attribute-options',\n  templateUrl: './application-attribute-options.component.html',\n  styleUrls: ['./application-attribute-options.component.scss']\n})\nexport class ApplicationAttributeOptionsComponent implements OnInit {\n\n  public form: FormGroup;\n  public attributeOptions = [];\n  public showDescription = true;\n  public editId;\n  @Input() id: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private localdata: LocalDataService,\n  ) { }\n\n  ngOnInit(): void {\n    this.buildForm();\n\n    if (environment.staticData){\n      const values = this.localdata.get('attributeOptions');\n      if (!values){\n        return;\n      }\n\n      const attrId = this.id.replace(/\\ /g, '_').toLowerCase();\n      this.attributeOptions = values[`attr-opts-${attrId}`] || [];\n      return;\n    }\n  }\n\n  private buildForm(): void{\n    this.form = this.formBuilder.group({\n      value: ['', Validators.required]\n    });\n  }\n\n  add(): void {\n    if (this.form.invalid) {\n      alert('All fields are required');\n      return;\n    }\n\n    const formValues = this.form.value;\n\n    const translations = formValues.translations.map( x => {\n      return {\n        keyVal: formValues.value,\n        langId: Number(x.language),\n        value: x.value\n      };\n    });\n    formValues.translations = translations;\n    const data = {\n      id: new Date().getTime(),\n      value: formValues.value,\n      translations,\n      default: false\n    };\n    if (!this.editId) {\n      this.attributeOptions.push(data);\n    } else {\n      this.attributeOptions = this.attributeOptions.map( x => {\n        if (x.id === this.editId) {\n          return data;\n        }\n        return x;\n      });\n    }\n\n\n    this.form.reset();\n    this.showDescription = false;\n    this.saveLocalData();\n    setTimeout( x => {\n      this.showDescription = true;\n    }, 100);\n  }\n\n  setDefault(id, value): void{\n    this.attributeOptions.map( x => {\n      if (id === x.id) {\n        x.default = !value;\n      } else {\n        x.default = false;\n      }\n      return x;\n    });\n    this.saveLocalData();\n  }\n\n  edit(option): void{\n    this.editId = option.id;\n    this.form.get('value').patchValue(option.value);\n    this.showDescription = false;\n    setTimeout( x => {\n      this.showDescription = true;\n      this.appendCurrentTranslations(option.translations);\n    });\n  }\n\n  cancelEdit(): void{\n    this.editId = null;\n    this.form.reset();\n    this.showDescription = false;\n    setTimeout( x => {\n      this.showDescription = true;\n    });\n  }\n\n  private appendCurrentTranslations(translations: any[]): void{\n    this.form.removeControl('translations');\n    this.form.addControl('translations', this.formBuilder.array([], Validators.required));\n\n    translations.forEach( x => {\n      const group = this.formBuilder.group({\n        language: [x.langId.toString(), Validators.required],\n        value: [x.value, Validators.required]\n      });\n      (this.form.get('translations') as FormArray).push(group);\n    });\n  }\n\n  delete(id): void{\n    const sure = confirm('Are you sure?');\n    if (!sure) {\n      return;\n    }\n\n    this.attributeOptions = this.attributeOptions.filter( x => x.id !== id);\n    this.saveLocalData();\n  }\n\n  private saveLocalData(): void {\n    const attrId = this.id.replace(/\\ /g, '_').toLowerCase();\n    const toSave = {\n      ['attr-opts-' + attrId]: this.attributeOptions\n    };\n    const oldvalues = this.localdata.get('attributeOptions');\n    if (!oldvalues){\n      this.localdata.save('attributeOptions', {\n        ...toSave\n      });\n    } else {\n      this.localdata.save('attributeOptions', {\n        ...oldvalues,\n        ...toSave\n      });\n    }\n  }\n}\n","<ul class=\"nav nav-tabs\" >\n    <li class=\"nav-item\">\n        <a class=\"nav-link active\">Options</a>\n      </li>\n</ul>\n<form class=\"fform fform--inline optionsForm\" [formGroup]=\"form\">\n    <div class=\"form-group flex-2\" >\n      <label>Description:</label> \n      <app-language-field *ngIf=\"showDescription\" [title]=\"'Description'\" [form]=\"form\"></app-language-field> \n    </div>\n    <div class=\"form-group\">\n        <label>Value: </label>\n        <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"value\">\n    </div>\n    <button type=\"button\" class=\"btn btn-sm  btn-primary\" (click)=\"add()\">{{editId ? 'Update' : 'Add'}}</button>\n    <button *ngIf=\"editId\" type=\"button\" class=\"btn btn-sm  btn-secondary\" (click)=\"cancelEdit()\">Cancel</button>\n</form>\n\n<div class=\"table-list optionsList\" >  \n    <table class=\"table table-sm\">\n        <thead>\n            <tr> \n                <th scope=\"col\">Description</th>\n                <th scope=\"col\">Value</th>\n                <th scope=\"col\">Default</th>\n                <th scope=\"col\"></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let option of attributeOptions\"> \n                <td>\n                    {{option.translations | itranslate}}\n                </td>\n                <td>\n                    {{option.value}}\n                </td>\n                <td>\n                    <div class=\"form-check\">\n                        <input \n                            (change)=\"setDefault(option.id, option.default)\"\n                            type=\"checkbox\" class=\"form-check-input\" [checked]=\"option.default\"> \n                    </div>\n                </td>\n                <td class=\"table-list__actions\">\n                    <a (click)=\"edit(option)\">edit</a> | <a (click)=\"delete(option.id)\">delete</a>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>     ","<nav aria-label=\"breadcrumb\">\r\n    <ol class=\"breadcrumb\"> \r\n        <li class=\"breadcrumb-item\">\r\n            <a [routerLink]=\"['/application']\">Application</a>\r\n        </li>\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n            {{application.systemId}}\r\n        </li>\r\n    </ol>\r\n</nav>\r\n\r\n\r\n<div class=\"section application\">\r\n    <div class=\"form-group form-group-sm\">\r\n        <label>\r\n            System ID:\r\n            <strong>{{application.systemId}}</strong>\r\n        </label>\r\n        <!-- <input type=\"text\" class=\"form-control form-control-sm\" readonly> -->\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>\r\n            Description:\r\n            <strong>{{application.translations | itranslate}}</strong>\r\n        </label>\r\n        <!-- <textarea class=\"form-control form-control-sm\" rows=\"3\" readonly></textarea> -->\r\n    </div>  \r\n</div>\r\n\r\n<div class=\"table-list\">\r\n\r\n    <div class=\"table-list__buttons\">\r\n        <label>Attributes</label>\r\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"showAppForm('add')\">Add New Attribute</button>\r\n    </div>\r\n\r\n    <table class=\"table table-sm\">\r\n        <thead>\r\n            <tr> \r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">Title</th>\r\n                <th scope=\"col\">Type</th>                \r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let attribute of applicationAttributes\"> \r\n                <td>\r\n                    {{attribute.attbId}}\r\n                </td>\r\n                <td>\r\n                    {{ attribute.translations | itranslate }}\r\n                </td>\r\n                <td>\r\n                    {{attribute.attbType}}\r\n                </td>\r\n                <td class=\"table-list__actions\">\r\n                    <a>view</a> |<a (click)=\"showAppForm('edit', attribute)\">edit</a> | \r\n                    <a (click)=\"delete(attribute)\">delete</a>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n<app-modal\r\n    class=\"large\"\r\n    [show]=\"showModal\"\r\n    [saveBtn]=\"saveButtonText\"\r\n    [closeBtn]=\"'Cancel'\"\r\n    [title]=\"modalTitle\"\r\n    (close)=\"closeModal()\"\r\n    (submit)=\"submitForm()\"\r\n>\r\n    <!-- <ul class=\"nav nav-tabs\" *ngIf=\"activeTab !== 'options'\">\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link active\">Details</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"activeTab='options'\">Options</a>\r\n        </li>\r\n    </ul> -->\r\n    <form [formGroup]=\"form\" class=\"fform fform--inline\">     \r\n        <div *ngIf=\"!editId\" class=\"form-check form-check-inline existingAttribute\">\r\n            <input \r\n                (change)=\"toggleExistingAttribute()\"\r\n                class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" [checked]=\"isExistingAttribute\">               \r\n            <label class=\"form-check-label\" for=\"inlineCheckbox1\">Existing Attribute</label>\r\n        </div>\r\n        <ng-container *ngIf=\"isExistingAttribute\">\r\n            <div class=\"form-group\">\r\n                <label>Attribute: </label> \r\n                <select \r\n                    [ngClass]=\"{'is-invalid': form.controls.existing.invalid && form.controls.existing.touched}\"\r\n                    formControlName=\"existing\" class=\"form-control form-control-sm\">\r\n                    <option></option>\r\n                    <ng-container *ngFor=\"let attr of allAttributes\">\r\n                        <option *ngIf=\"!hasAttribute(attr.attbId)\" [value]=\"attr.attbId\">{{attr.attbId}}</option>\r\n                    </ng-container> \r\n\r\n                </select>\r\n            </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!isExistingAttribute\">\r\n            <div class=\"form-group\">\r\n                <label>ID: </label> \r\n                <input \r\n                    formControlName=\"id\" type=\"text\" class=\"form-control form-control-sm\" \r\n                    [ngClass]=\"{'is-invalid': form.controls.id.invalid && form.controls.id.touched}\">\r\n            </div> \r\n            <div class=\"form-group\">\r\n                <label>Type: </label> \r\n                <select \r\n                    [ngClass]=\"{'is-invalid': form.controls.type.invalid && form.controls.type.touched}\"\r\n                    formControlName=\"type\" class=\"form-control form-control-sm\">\r\n                    <option></option>\r\n                    <option value=\"string\">String</option>\r\n                    <option value=\"numeric\">Numeric</option>\r\n                    <option value=\"boolean\">Boolean</option>\r\n                </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Title: </label>\r\n                <app-language-field [title]=\"'Title'\" *ngIf=\"showModal\" [form]=\"form\"></app-language-field> \r\n            </div>\r\n        </ng-container>\r\n        \r\n    </form>\r\n    <br>\r\n\r\n    <app-application-attribute-options [id]=\"editId\" *ngIf=\"editId && showModal\"></app-application-attribute-options>\r\n    \r\n     \r\n</app-modal>","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from 'src/app/shared/services/api.service';\nimport { LocalDataService } from 'src/app/shared/services/local-data.service';\nimport { environment } from 'src/environments/environment';\nimport { IApplication } from '../application/application.component';\n\n\nexport interface IApplicationAttribute  {\n  id: string;\n  type: string;\n  translations: any[];\n}\n\n@Component({\n  selector: 'app-application-view',\n  templateUrl: './application-view.component.html',\n  styleUrls: ['./application-view.component.scss']\n})\nexport class ApplicationViewComponent implements OnInit {\n\n  public application: IApplication;\n  public applicationAttributes: any[] = [];\n  public modalTitle: string;\n  public saveButtonText: string;\n  public editId: string;\n  public form: FormGroup;\n  public showModal = false;\n  public isExistingAttribute = false;\n  public allAttributes = [];\n\n  // TEMP\n  activeTab = 'details';\n\nconstructor(\n    private formBuilder: FormBuilder,\n    private localdata: LocalDataService,\n    private api: ApiService,\n  ) { }\n\n  ngOnInit(): void {\n    this.buildForm();\n\n    this.application = this.localdata.get('application');\n\n    if (environment.staticData){\n      const values = this.localdata.get('applicationAttributes');\n      this.getAllAttributes();\n      if (!values){\n        return;\n      }\n\n      const appId = this.application.systemId.replace(/\\ /g, '_').toLowerCase();\n      this.applicationAttributes = values[`app-attr-${appId}`] || [];\n      return;\n    }\n\n    this.applicationAttributes = [];\n    this.getApplicationAttribute(this.application.systemId);\n  }\n\n  getAllAttributes(): any{\n    const values = this.localdata.get('applicationAttributes');\n    if (!values){\n      return;\n    }\n    Object.values(values).forEach((attrs: any) => {\n      this.allAttributes = [\n        ...this.allAttributes,\n        ...attrs\n      ];\n    });\n    return values;\n  }\n\n  hasAttribute(id): boolean{\n    return this.applicationAttributes.filter( x => x.attbId === id).length > 0;\n  }\n\n  toggleExistingAttribute(): void{\n    this.isExistingAttribute = !this.isExistingAttribute;\n    this.form.reset();\n  }\n\n  private saveLocalData(): void {\n    const appId = this.application.systemId.replace(/\\ /g, '_').toLowerCase();\n    const toSave = {\n      ['app-attr-' + appId]: this.applicationAttributes\n    };\n    const oldvalues = this.localdata.get('applicationAttributes');\n    if (!oldvalues){\n      this.localdata.save('applicationAttributes', {\n        ...toSave\n      });\n    } else {\n      this.localdata.save('applicationAttributes', {\n        ...oldvalues,\n        ...toSave\n      });\n    }\n  }\n\n  getApplicationAttribute(id: string): void{\n    this.api.list('applicationroleattribute/getApplicationRoleAttribute', {\n      systemId: id\n    }).subscribe( x => {\n      this.applicationAttributes = x.roleAttr;\n      console.log(x.roleAttr);\n    });\n  }\n\n  private buildForm(): void {\n    this.form = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      type: ['', [Validators.required]],\n      existing: ['', []],\n    });\n  }\n\n\n  showAppForm(type: string, app?: any): void {\n    if (type === 'add') {\n      this.modalTitle = 'New Attibute';\n      this.saveButtonText = 'Save';\n      this.editId = null;\n    } else {\n      this.editId = app.attbId;\n      this.saveButtonText = 'Update';\n      this.modalTitle = `Edit ${app.attbId}`;\n      this.form.get('id').patchValue(app.attbId);\n      this.form.get('type').patchValue(app.attbType);\n      setTimeout( x => {\n        this.appendCurrentTranslations(app.translations);\n      }, 0);\n    }\n\n    this.showModal = true;\n  }\n\n  private appendCurrentTranslations(translations: any[]): void{\n    translations.forEach( x => {\n      const group = this.formBuilder.group({\n        language: [x.langId.toString(), Validators.required],\n        value: [x.value, Validators.required]\n      });\n      (this.form.get('translations') as FormArray).push(group);\n    });\n  }\n\n  closeModal(): void {\n    this.form.reset();\n    this.showModal = false;\n    this.isExistingAttribute = false;\n  }\n\n\n  submitForm(): void{\n    this.form.markAllAsTouched();\n\n    if (this.isExistingAttribute) {\n      const attrId = this.form.value.existing;\n      if (attrId.length === 0){\n        return;\n      }\n      const attribute = this.allAttributes.filter( x => x.attbId === attrId)[0];\n      this.applicationAttributes.push(attribute);\n      this.saveLocalData();\n      this.form.reset();\n      this.showModal = false;\n      this.isExistingAttribute = false;\n      return;\n    }\n\n    if (this.form.invalid) {\n      alert('All fields are required');\n      return;\n    }\n\n    const {id, type, translations}: IApplicationAttribute = this.form.value;\n\n    const data = {\n      attbId: id,\n      attbType: type,\n      attbTitle: id,\n      systemId: this.application.systemId,\n      translations: translations.map( x => {\n        return {\n          keyVal: id,\n          langId: Number(x.language),\n          value: x.value\n        };\n      })\n    };\n\n    if (!this.editId) {\n      if (environment.staticData) {\n        this.applicationAttributes.push(data);\n        this.saveLocalData();\n        this.editId = id;\n        this.modalTitle = 'Edit ' + id;\n        this.saveButtonText = 'Update';\n        // this.form.reset();\n        return;\n      }\n\n      this.api.create('roleattribute/createRoleAttribute', data).subscribe( x => {\n        this.showModal = false;\n        this.form.reset();\n      });\n    } else {\n      this.updateAttribute(data, this.editId);\n    }\n  }\n\n  updateAttribute(data, oldId): void {\n\n    if (environment.staticData) {\n      this.applicationAttributes = this.applicationAttributes.filter( x => x.attbId !== oldId);\n      this.applicationAttributes.push(data);\n      this.saveLocalData();\n      this.form.reset();\n      this.showModal = false;\n      return;\n    }\n\n    this.api.create('roleattribute/updateRoleAttribute', {\n      ...data,\n      oldAttbId: oldId,\n    }).subscribe( x => {\n      this.showModal = false;\n      this.form.reset();\n    });\n  }\n\n  async delete(app: any): Promise<any> {\n    const sure = confirm('Are you sure?');\n    if (!sure){\n      return;\n    }\n\n    if (environment.staticData) {\n      this.applicationAttributes = this.applicationAttributes.filter( x => x.attbId !== app.attbId);\n      this.saveLocalData();\n      return;\n    }\n    const data = {\n      roleAttributeId: app.attbId,\n      systemId: this.application.systemId\n    };\n    await this.api.create('applicationroleattribute/deleteApplicationRoleAttribute', data).toPromise();\n    this.applicationAttributes = this.applicationAttributes.filter( x => app.attbId !== x.attbId);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ApplicationComponent } from './application/application.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ApplicationViewComponent } from './application-view/application-view.component';\nimport { TestComponent } from './test/test.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ApplicationAttributeOptionsComponent } from './application-attribute-options/application-attribute-options.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ApplicationComponent\n  },\n  {\n    path: ':id',\n    component: ApplicationViewComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    ApplicationComponent,\n    ApplicationViewComponent,\n    TestComponent,\n    ApplicationAttributeOptionsComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ApplicationModule { }\n","<nav aria-label=\"breadcrumb\">\r\n    <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">Application</li>\r\n    </ol>\r\n</nav>\r\n\r\n<div class=\"table-list\">\r\n    <div class=\"table-list__buttons\">\r\n        <label></label>\r\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"showAppForm('add')\">Add New Application</button>\r\n    </div>\r\n\r\n    <table class=\"table table-sm\">\r\n        <thead>\r\n            <tr> \r\n                <th scope=\"col\">System ID</th>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let app of applications\"> \r\n                <td>{{app.systemId}} </td>\r\n                <td>{{app.translations | itranslate}}</td>\r\n                <td class=\"table-list__actions\">\r\n                    <a (click)=\"view(app)\">view</a> | \r\n                    <a (click)=\"showAppForm('edit', app)\">edit</a> | \r\n                    <a (click)=\"delete(app)\">delete</a>\r\n                </td>\r\n            </tr> \r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n<app-modal\r\n    [show]=\"showModal\"\r\n    [saveBtn]=\"saveButtonText\"\r\n    [closeBtn]=\"'Cancel'\"\r\n    [title]=\"modalTitle\"\r\n    (close)=\"closeModal()\"\r\n    (submit)=\"submitForm()\"\r\n>\r\n    <form [formGroup]=\"form\" *ngIf=\"form\">\r\n        <div class=\"form-group\">\r\n            <label>System ID</label> \r\n            <input \r\n              formControlName=\"systemId\" type=\"text\" class=\"form-control\" \r\n              [ngClass]=\"{'is-invalid': form.controls.systemId.invalid && form.controls.systemId.touched}\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label>Description: </label>\r\n            <!-- <textarea formControlName=\"description\" type=\"text\" class=\"form-control\" ></textarea> -->\r\n            <app-language-field [title]=\"'Description'\" [form]=\"form\" *ngIf=\"showModal\"></app-language-field> \r\n        </div>\r\n    </form>\r\n</app-modal>","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { timestamp } from 'rxjs/operators';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { LocalDataService } from 'src/app/shared/services/local-data.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nexport interface IApplication  {\r\n  systemId: string;\r\n  translations?: any[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-application',\r\n  templateUrl: './application.component.html',\r\n  styleUrls: ['./application.component.scss']\r\n})\r\nexport class ApplicationComponent implements OnInit {\r\n\r\n  public language = environment.language;\r\n  public modalTitle: string;\r\n  public saveButtonText = 'Save';\r\n  public form: FormGroup;\r\n  public descriptionForm: FormGroup;\r\n  public showModal = false;\r\n  public editId: string;\r\n\r\n  applications = [\r\n    {\r\n      systemId: 'SVC',\r\n      systemDescription: 'SVC',\r\n      translations: [\r\n        {\r\n          id: 1,\r\n          keyVal: 'SVC',\r\n          langId: 1,\r\n          value: 'Single View Customer'\r\n        },\r\n        {\r\n          id: 2,\r\n          keyVal: 'SVC',\r\n          langId: 2,\r\n          value: '单视图客户'\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private api: ApiService,\r\n    private localdata: LocalDataService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n\r\n    if (environment.staticData){\r\n\r\n      if (!this.localdata.get('applications')){\r\n        this.localdata.save('applications', this.applications);\r\n      } else {\r\n        this.applications = this.localdata.get('applications');\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    this.loadData();\r\n  }\r\n\r\n  private async loadData(): Promise<any>{\r\n    this.applications = [];\r\n    const list =  await this.api.list('application/getAllApplication').toPromise();\r\n    this.applications = list.lstApplications;\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = this.formBuilder.group({\r\n      systemId: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  showAppForm(type: string, app?: IApplication): void {\r\n    if (type === 'add') {\r\n      this.modalTitle = 'New Application';\r\n      this.saveButtonText = 'Save';\r\n      this.editId = null;\r\n    } else {\r\n      this.saveButtonText = 'Update';\r\n      this.modalTitle = `Edit ${app.systemId}`;\r\n      this.editId = app.systemId;\r\n      this.form.get('systemId').patchValue(app.systemId);\r\n      setTimeout( x => {\r\n        this.appendCurrentTranslations(app.translations);\r\n      }, 0);\r\n    }\r\n\r\n    this.showModal = true;\r\n  }\r\n\r\n  private appendCurrentTranslations(translations: any[]): void{\r\n    translations.forEach( x => {\r\n      const group = this.formBuilder.group({\r\n        language: [x.langId.toString(), Validators.required],\r\n        value: [x.value, Validators.required]\r\n      });\r\n      (this.form.get('translations') as FormArray).push(group);\r\n    });\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.form.reset();\r\n    this.showModal = false;\r\n  }\r\n\r\n\r\n  async submitForm(): Promise<any> {\r\n    this.form.markAllAsTouched();\r\n    const {systemId, translations}: IApplication = this.form.value;\r\n    if (this.form.invalid) {\r\n      alert('All fields are required');\r\n      return;\r\n    }\r\n\r\n    if (!this.englishExist(translations)) {\r\n      alert('English translation is required');\r\n      return;\r\n    }\r\n\r\n    this.showModal = false;\r\n    const descriptions = translations.map( x => {\r\n      return {\r\n        keyVal: systemId,\r\n        langId: Number(x.language),\r\n        value: x.value\r\n      };\r\n    });\r\n\r\n    const data = {\r\n      systemDescription: systemId,\r\n      systemId,\r\n      translations: descriptions\r\n    };\r\n\r\n    if (this.modalTitle.includes('Edit')) {\r\n      await this.updateApplication(data);\r\n      return;\r\n    }\r\n    await this.createApplication(data);\r\n  }\r\n\r\n\r\n  async updateApplication(data): Promise<any>{\r\n    const updateData = {\r\n      oldSystemId: this.editId,\r\n      ...data\r\n    };\r\n\r\n    if (environment.staticData){\r\n      this.updateApplicationList(data.systemId, updateData.translations);\r\n      this.saveLocalData();\r\n      return;\r\n    }\r\n\r\n    const updated = await this.api.create('application/updateApplication', updateData).toPromise();\r\n    this.updateApplicationList(data.systemId, updated.application.translations);\r\n    this.form.reset();\r\n  }\r\n\r\n  private updateApplicationList(systemId, translations): void{\r\n    this.applications = this.applications.map( x => {\r\n      if ( x.systemId === this.editId ) {\r\n        x.systemId = systemId;\r\n        x.translations = translations;\r\n      }\r\n      return x;\r\n    });\r\n  }\r\n\r\n  async createApplication(data): Promise<any>{\r\n    if (environment.staticData){\r\n      this.applications.push({\r\n        systemId: data.systemId,\r\n        systemDescription: data.systemId,\r\n        translations: data.translations.map( x => {\r\n          return {\r\n            id: new Date().getTime(),\r\n            ...x\r\n          };\r\n        })\r\n      });\r\n      this.saveLocalData();\r\n      this.form.reset();\r\n      return;\r\n    }\r\n    const saved = await this.api.create('application/createApplication', data).toPromise();\r\n    this.form.reset();\r\n    this.applications.push(saved.application);\r\n  }\r\n\r\n  englishExist(translations): boolean {\r\n    const found = translations.filter( x => x.language === '1').length > 0;\r\n    return found;\r\n  }\r\n\r\n  async delete(app: IApplication): Promise<any> {\r\n    const sure = confirm('Are you sure?');\r\n    if (!sure){\r\n      return;\r\n    }\r\n\r\n    if (environment.staticData){\r\n      this.applications = this.applications.filter( x => {\r\n        return x.systemId !== app.systemId;\r\n      });\r\n      this.saveLocalData();\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      oldSystemId: app.systemId,\r\n      ...app\r\n    };\r\n    await this.api.create('application/deleteApplication', data).toPromise();\r\n    this.applications = this.applications.filter( x => x.systemId !== app.systemId);\r\n  }\r\n\r\n  view(app: IApplication): void{\r\n    this.localdata.save('application', app);\r\n    setTimeout( x => {\r\n      this.router.navigate(['application', app.systemId]);\r\n    }, 250);\r\n  }\r\n\r\n  private saveLocalData(): void{\r\n    this.localdata.save('applications', this.applications);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      name: 'test'\n    });\n  }\n\n}\n","<p>test works!</p>\n\n<form [formGroup]=\"form\">\n    <input type=\"text\" formControlName=\"name\">\n</form>"]}