{"version":3,"sources":["./src/app/modules/provisioning/provisioning.module.ts","./src/app/modules/provisioning/provisioning/provisioning.component.ts","./src/app/modules/provisioning/provisioning/provisioning.component.html"],"names":[],"mappings":"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","file":"modules-provisioning-provisioning-module-es2015.js","sourcesContent":["import { ProvisioningComponent } from './provisioning/provisioning.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProvisioningComponent\n  }\n];\n@NgModule({\n  declarations: [\n    ProvisioningComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ProvisioningModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ApiService } from '../../../shared/services/api.service';\r\nimport { STATIC_DATA } from '../../../shared/data/static.data';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LocalDataService } from 'src/app/shared/services/local-data.service';\r\nimport { IApplication } from '../../../shared/interfaces/iapplication';\r\nimport { IMultipleSelectionTag } from '../../../shared/interfaces/i-multiple-selection-tag';\r\n\r\ninterface ISelectionApplications extends IApplication {\r\n  removed: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-provisioning',\r\n  templateUrl: './provisioning.component.html',\r\n  styleUrls: ['./provisioning.component.scss']\r\n})\r\nexport class ProvisioningComponent implements OnInit {\r\n\r\n  private isStaticData = environment.staticData;\r\n\r\n  firstLeveldata = {\r\n    jobDuties: STATIC_DATA.jobDuties,\r\n    channels: STATIC_DATA.channels,\r\n    businessRoles: STATIC_DATA.businessRoles,\r\n    teams: STATIC_DATA.teams,\r\n  };\r\n  applications: ISelectionApplications[] = [];\r\n  applicationAttributes = [];\r\n  attributeOptions = [];\r\n\r\n  selectedApplications = [];\r\n  selectedRoles = [];\r\n\r\n  applicationForm: FormGroup;\r\n  levelOneForm: FormGroup;\r\n  levelTwoForm: FormGroup;\r\n  testForm: FormGroup;\r\n  generalRoles: any;\r\n\r\n  multipleSelectionBusinessRoles: IMultipleSelectionTag[];\r\n  selectedBusinessRoles: IMultipleSelectionTag[];\r\n\r\n  commonAttributesForms = {\r\n    FunctionalGroup: 'function_group_id',\r\n    Centers: 'center_cd',\r\n    ChannelsID: 'channel_id',\r\n    ChannelsCD: 'channel_cd'\r\n  };\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private fb: FormBuilder,\r\n    private localdata: LocalDataService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.testForm = this.fb.group({\r\n      business_role_id: ['a'],\r\n      channel_id: ['', Validators.required],\r\n      job_duty_id: ['', Validators.required],\r\n      team_id: ['', Validators.required]\r\n    });\r\n\r\n    this.generalRoles = this.localdata.get('general-roles') || {\r\n      organization : [],\r\n      team : [],\r\n      channel : [],\r\n      jobrole : [],\r\n    };\r\n    this.firstLeveldata = {\r\n      jobDuties: this.generalRoles.organization,\r\n      channels: this.generalRoles.channel,\r\n      businessRoles: this.generalRoles.jobrole,\r\n      teams: this.generalRoles.team,\r\n    };\r\n\r\n    this.buildForms();\r\n\r\n    if (this.isStaticData) {\r\n      this.applications = this.localdata.get('applications');\r\n      this.applicationAttributes = this.localdata.get('applicationAttributes') || [];\r\n      this.attributeOptions = this.localdata.get('attributeOptions') || [];\r\n    }\r\n\r\n    if (!this.isStaticData) {\r\n      this.resetData();\r\n      this.loadFirstLevelData();\r\n      this.getApplications();\r\n    }\r\n\r\n    this.multipleSelectionBusinessRoles = this.firstLeveldata.businessRoles.map(item => {\r\n      return {\r\n        id: item.id,\r\n        text: item.name\r\n      };\r\n    });\r\n  }\r\n\r\n  getOptions(id): any {\r\n    const format = id.replace(/\\ /g, '_').toLowerCase();\r\n    const options = this.attributeOptions['attr-opts-' + format];\r\n    return options || [];\r\n  }\r\n\r\n  private buildForms(): void {\r\n    this.applicationForm = this.fb.group({\r\n      application: ['', Validators.required]\r\n    });\r\n    this.levelOneForm = this.fb.group({\r\n      business_role_id: [''],\r\n      channel_id: ['', Validators.required],\r\n      job_duty_id: ['', Validators.required],\r\n      team_id: ['', Validators.required]\r\n    });\r\n\r\n    this.levelTwoForm = new FormGroup({\r\n      applications: new FormArray([])\r\n    });\r\n  }\r\n\r\n  get applicationsFormArray(): FormArray {\r\n    return this.levelTwoForm.get('applications') as FormArray;\r\n  }\r\n\r\n  addRole(): void {\r\n    const roleField = this.levelOneForm.get('business_role_id');\r\n    if (roleField.value.length < 1) {\r\n      return;\r\n    }\r\n    const selectedRole = this.firstLeveldata.businessRoles.filter( x => x.id.toString() === roleField.value);\r\n    this.selectedRoles.push(selectedRole[0]);\r\n    roleField.reset();\r\n  }\r\n\r\n  removeRole(id): void{\r\n    this.selectedRoles = this.selectedRoles.filter(x => x.id !== id);\r\n  }\r\n\r\n  toggleRemoveAppIfNotMultiple(appId: string) {\r\n    this.applications = this.applications.map(item => {\r\n      if (item.systemId === appId && !item.allowMultiple) {\r\n        item.removed = !item.removed;\r\n      }\r\n      return item;\r\n    });\r\n  }\r\n\r\n  getAppTranslation(systemId) {\r\n    let app;\r\n    this.applications.forEach(item => {\r\n      if (systemId === item.systemId) {\r\n        app = item;\r\n      }\r\n    });\r\n    return app.translations;\r\n  }\r\n\r\n  private getApplicationBySystemId(systemId) {\r\n    return this.applications.filter(item => item.systemId === systemId)[0];\r\n  }\r\n\r\n  async addApplication(): Promise<any> {\r\n    if (this.applicationForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const appId = this.applicationForm.value.application;\r\n    const format = appId.replace(/\\ /g, '_').toLowerCase();\r\n    const attributes = this.applicationAttributes['app-attr-' + format];\r\n\r\n    this.selectedApplications.push({\r\n      id: new Date().getTime(),\r\n      appId,\r\n      attributes,\r\n      application: this.getApplicationBySystemId(appId)\r\n    });\r\n\r\n    this.toggleRemoveAppIfNotMultiple(appId);\r\n    this.applicationForm.reset();\r\n\r\n    // let app = this.applications.filter( x =>  x.id.toString() === appId)[0] as any;\r\n    // const attributes = await this.getApplicationAttributes(appId);\r\n    // const attributeDefaultValues: any = await this.getApplicationAttributeDefaults(appId);\r\n    // this.buildApplicationsFormArray(appId, attributeDefaultValues.defaultAppConfigs[0]);\r\n\r\n    // app = {\r\n    //   ...app,\r\n    //   attributes\r\n    // };\r\n    // this.selectedApplications.push(app);\r\n    // this.applicationForm.reset();\r\n    return;\r\n  }\r\n\r\n  private buildApplicationsFormArray(appId, defaultValues): void{\r\n\r\n    const arrayFormGroup = this.fb.group({\r\n      app_id: [appId, Validators.required],\r\n      center_cd: ['', Validators.required],\r\n      channel_cd: ['', Validators.required],\r\n      channel_id: ['', Validators.required],\r\n      function_group_id: ['', Validators.required],\r\n    });\r\n\r\n    if (defaultValues) {\r\n      arrayFormGroup.patchValue({\r\n        center_cd: defaultValues.centerCD,\r\n        channel_cd: defaultValues.channelCD,\r\n        channel_id: defaultValues.channelId,\r\n        function_group_id: defaultValues.functionGroupId,\r\n      });\r\n    }\r\n    this.applicationsFormArray.push(arrayFormGroup);\r\n  }\r\n\r\n  getAttributeFormName(attributeName): string{\r\n    const attrNameNoSpace = attributeName.replace(/\\ /g, '');\r\n    return this.commonAttributesForms[attrNameNoSpace];\r\n  }\r\n\r\n  async getApplicationAttributeDefaults(appId): Promise<any> {\r\n    const levelOneForm = this.levelOneForm.value;\r\n    if (\r\n      !levelOneForm.business_role_id &&\r\n      !levelOneForm.channel_id &&\r\n      !levelOneForm.job_duty_id &&\r\n      !levelOneForm.team_id\r\n    ) {\r\n      return new Promise((res, rej) => res({defaultAppConfigs: []}));\r\n    }\r\n\r\n    const levelOneData = {\r\n      applicationId: appId,\r\n      businessRoleId: levelOneForm.business_role_id,\r\n      channelId: levelOneForm.channel_id,\r\n      jobDutyId: levelOneForm.job_duty_id,\r\n      teamId: levelOneForm.team_id\r\n    };\r\n    const defaults = await this.api.list('default-app-config/getDefaultAttributes', levelOneData).toPromise();\r\n    return defaults;\r\n  }\r\n\r\n  async getApplicationAttributes(appId): Promise<any[]> {\r\n    const attributes = await this.api.list('attribute/getAllAppAttribute', { appId }).toPromise();\r\n\r\n    const attributesWithOptions = [];\r\n    for await (const attr of attributes) {\r\n      const options = await this.getAttributeOptions(appId, attr.category);\r\n      attributesWithOptions.push({\r\n        ...attr,\r\n        options\r\n      });\r\n    }\r\n    return attributesWithOptions;\r\n  }\r\n\r\n  async getAttributeOptions(appId, category ): Promise<any> {\r\n    const options = await this.api.list('attribute/findValuesByCategory', { appId, category}).toPromise();\r\n    return options;\r\n  }\r\n\r\n  isRoleAlreadySelected(id): boolean {\r\n    return this.selectedRoles.filter( x => x.id === id).length > 0;\r\n  }\r\n\r\n  isAppAlreadySelected(id): boolean{\r\n    return this.selectedApplications.filter( x => x.id === id).length > 0;\r\n  }\r\n\r\n  // removeApplication(id, index): void {\r\n  //   this.selectedApplications = this.selectedApplications.filter( x =>  x.id !== id);\r\n  //   this.applicationsFormArray.removeAt(index);\r\n\r\n  //   console.log(this.levelTwoForm.value);\r\n  // }\r\n  removeApplication(id): void {\r\n    this.selectedApplications = this.selectedApplications.filter((x) =>  {\r\n      if (x.id !== id) {\r\n        return true;\r\n      }\r\n      if (!x.allowMultiple) {\r\n        this.toggleRemoveAppIfNotMultiple(x.appId)\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  private resetData(): void{\r\n    this.firstLeveldata = {\r\n      jobDuties: [],\r\n      channels: [],\r\n      businessRoles: [],\r\n      teams: []\r\n    };\r\n\r\n    this.applications = [];\r\n  }\r\n\r\n  private getApplications(): void {\r\n    this.getListOf('application').then( x => {\r\n      this.applications = x;\r\n    });\r\n  }\r\n\r\n  private loadFirstLevelData(): void{\r\n    this.getListOf('job-duty').then( x => {\r\n      this.firstLeveldata.jobDuties = x;\r\n    });\r\n    this.getListOf('business-role').then( x => {\r\n      this.firstLeveldata.businessRoles = x;\r\n    });\r\n    this.getListOf('channel').then( x => {\r\n      this.firstLeveldata.channels = x;\r\n    });\r\n    this.getListOf('team').then( x => {\r\n      this.firstLeveldata.teams = x;\r\n    });\r\n  }\r\n\r\n  private getListOf(entity): Promise<any>{\r\n    return new Promise( (res, rej) => {\r\n      this.api.list(entity, {limit: 999, offset: 0}).subscribe( x => {\r\n        res(x);\r\n      });\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    if (this.levelOneForm.invalid || this.levelTwoForm.invalid) {\r\n      alert('All Fields are required');\r\n      return;\r\n    }\r\n\r\n    const levelOne  = this.levelOneForm.value;\r\n    const levelTwo  = this.levelTwoForm.value;\r\n    const data = {\r\n      ...levelOne,\r\n      applications: [\r\n        ...levelTwo.applications\r\n      ]\r\n    };\r\n\r\n    this.api.create('preset', data).subscribe( x => {\r\n      this.levelOneForm.reset();\r\n      this.levelTwoForm.reset();\r\n      alert('Success');\r\n    });\r\n  }\r\n\r\n  // getAttributeOptions(attrID): any {\r\n  //   return STATIC_DATA.attributes.filter ( x => x.id === attrID)[0];\r\n  // }\r\n\r\n  onSelectionChange(selectedList: IMultipleSelectionTag[]) {\r\n    const businessRoleObject = {};\r\n    this.selectedRoles = [];\r\n    this.selectedBusinessRoles = selectedList;\r\n    this.firstLeveldata.businessRoles.forEach(item => {\r\n      businessRoleObject[item.id] = item;\r\n    });\r\n    selectedList.forEach(item => {\r\n      this.selectedRoles.push(businessRoleObject[item.id]);\r\n    });\r\n  }\r\n}\r\n","<h2 class=\"section-title\">General Role Maintenance</h2>\r\n<form class=\"levelOne\" [formGroup]=\"levelOneForm\">\r\n    <div>\r\n        <div class=\"form-group\">\r\n            <label>Organization</label>\r\n            <select class=\"form-control form-control-sm\" formControlName=\"job_duty_id\">\r\n                <option></option>\r\n                <option [value]=\"jobDuty.id\" *ngFor=\"let jobDuty of firstLeveldata.jobDuties\">{{jobDuty.name}}</option>\r\n            </select>\r\n        </div>\r\n        <!-- <div class=\"form-group\">\r\n                <label>Application Role</label>\r\n                <select class=\"form-control form-control-sm\" formControlName=\"business_role_id\">\r\n                        <option></option>\r\n                        <option [value]=\"br.id\" *ngFor=\"let br of firstLeveldata.businessRoles\">{{br.name}}</option>\r\n                </select>\r\n            </div> -->\r\n        <div class=\"form-group\">\r\n            <label>Channel</label>\r\n            <select class=\"form-control form-control-sm\" formControlName=\"channel_id\">\r\n                <option></option>\r\n                <option [value]=\"ch.id\" *ngFor=\"let ch of firstLeveldata.channels\">{{ch.name}}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label>Team</label>\r\n            <select class=\"form-control form-control-sm\" formControlName=\"team_id\">\r\n                <option></option>\r\n                <option [value]=\"ch.id\" *ngFor=\"let ch of firstLeveldata.teams\">{{ch.name}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"applicationRole\">\r\n        <div class=\"form-group\">\r\n            <label>Business Job Role</label>\r\n            <!-- <div>\r\n                <select class=\"form-control form-control-sm\" formControlName=\"business_role_id\">\r\n                    <option></option>\r\n                    <ng-container *ngFor=\"let br of firstLeveldata.businessRoles\">\r\n                        <option [value]=\"br.id\" *ngIf=\"!isRoleAlreadySelected(br.id)\">{{br.name}}</option>\r\n                    </ng-container>\r\n                </select>\r\n                <button class=\"btn btn-success btn-sm\" (click)=\"addRole()\">Add</button>\r\n            </div> -->\r\n            <app-multiple-selection (onSelectionChange)=\"onSelectionChange($event)\" [selection]=\"this.multipleSelectionBusinessRoles\"></app-multiple-selection>\r\n        </div>\r\n        <!-- <ul>\r\n            <li *ngFor=\"let role of selectedRoles\">\r\n                {{role.name}}\r\n                <a (click)=\"removeRole(role.id)\">remove</a>\r\n            </li>\r\n        </ul> -->\r\n    </div>\r\n</form>\r\n\r\n<h2 class=\"section-title\">Application Assignment</h2>\r\n<form [formGroup]=\"applicationForm\" class=\"application\">\r\n    <div class=\"form-group\">\r\n        <label>Application</label>\r\n        <select class=\"form-control form-control-sm\" formControlName=\"application\">\r\n            <option></option>\r\n            <ng-container *ngFor=\"let app of applications\">\r\n                <!-- *ngIf=\"!isAppAlreadySelected(app.systemId)\" -->\r\n                <option [value]=\"app.systemId\" *ngIf=\"!app.removed\">{{app.translations | itranslate}}</option>\r\n            </ng-container>\r\n\r\n        </select>\r\n        <button class=\"btn btn-primary btn-sm\" (click)=\"addApplication()\">Add Application</button>\r\n    </div>\r\n</form>\r\n\r\n<div [formGroup]=\"levelTwoForm\" class=\"level-two\">\r\n    <!-- <div formArrayName=\"applications\">\r\n        <div class=\"card\" *ngFor=\"let app of selectedApplications; let i=index\" [formGroupName]=\"i\">\r\n            <input type=\"hidden\" formControlName=\"app_id\"> \r\n            \r\n            <div class=\"card-header\">\r\n                {{app.name}}\r\n                <button type=\"button\" class=\"btn btn-link\" (click)=\"removeApplication(app.id, i)\">remove</button>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                    <div class=\"form-group\" *ngFor=\"let attr of app.attributes\">\r\n                        <label> {{attr.categoryValue}}</label> \r\n                        <select class=\"form-control form-control-sm\" [formControlName]=\"getAttributeFormName(attr.categoryValue)\">\r\n                            <option></option>\r\n                            <option [value]=\"option.categoryId\" *ngFor=\"let option of attr.options\">\r\n                                {{option.categoryValue}}\r\n                            </option>\r\n                        </select>                        \r\n                    </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div> -->\r\n    <div>\r\n        <div class=\"card\" *ngFor=\"let app of selectedApplications; let i=index\">\r\n            <div class=\"card-header\">\r\n                {{app.application.translations | itranslate}}\r\n\r\n                <button type=\"button\" class=\"btn btn-link\" (click)=\"removeApplication(app.id)\">remove</button>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"form-group\" *ngFor=\"let attr of app.attributes\">\r\n                    <label> {{attr.translations | itranslate}}</label>\r\n\r\n                    <select class=\"form-control form-control-sm\"\r\n                        *ngIf=\"getOptions(attr.attbId).length > 0;else inputField\">\r\n                        <option></option>\r\n                        <option [selected]=\"option.default\" [value]=\"option.value\"\r\n                            *ngFor=\"let option of getOptions(attr.attbId)\">\r\n                            {{option.translations | itranslate}}\r\n                        </option>\r\n                    </select>\r\n                    <ng-template #inputField>\r\n                        <input type=\"text\" class=\"form-control form-control-sm\">\r\n                    </ng-template>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"submit\">\r\n    <button class=\"btn btn-primary\" (click)=\"save()\">Save</button>\r\n</div>"],"sourceRoot":"webpack:///"}